{"ast":null,"code":"import _slicedToArray from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/client/src/views/aa_login/Register.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\nvar Register = function Register() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    successful = _useState2[0],\n    setSuccessful = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.message;\n    }),\n    message = _useSelector.message;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(clearMessage());\n  }, [dispatch]);\n  var initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  var validationSchema = Yup.object().shape({\n    username: Yup.string().test(\"len\", \"The username must be between 3 and 20 characters.\", function (val) {\n      return val && val.toString().length >= 3 && val.toString().length <= 20;\n    }).required(\"This field is required!\"),\n    email: Yup.string().email(\"This is not a valid email.\").required(\"This field is required!\"),\n    password: Yup.string().test(\"len\", \"The password must be between 6 and 40 characters.\", function (val) {\n      return val && val.toString().length >= 6 && val.toString().length <= 40;\n    }).required(\"This field is required!\")\n  });\n  var handleRegister = function handleRegister(formValue) {\n    var username = formValue.username,\n      email = formValue.email,\n      password = formValue.password;\n    setSuccessful(false);\n    dispatch(register({\n      username: username,\n      email: email,\n      password: password\n    })).unwrap().then(function () {\n      setSuccessful(true);\n    }).catch(function () {\n      setSuccessful(false);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 signup-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n    alt: \"profile-img\",\n    className: \"profile-img-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, !successful && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"username\",\n    component: \"div\",\n    className: \"alert alert-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"alert alert-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    className: \"alert alert-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, \"Sign Up\")))))), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, message)));\n};\nexport default Register;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Formik","Field","Form","ErrorMessage","Yup","register","clearMessage","Register","successful","setSuccessful","state","message","dispatch","initialValues","username","email","password","validationSchema","object","shape","string","test","val","toString","length","required","handleRegister","formValue","unwrap","then","catch"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/client/src/views/aa_login/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { register } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\n\nconst Register = () => {\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector((state) => state.message);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearMessage());\n  }, [dispatch]);\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string()\n      .test(\n        \"len\",\n        \"The username must be between 3 and 20 characters.\",\n        (val) =>\n          val &&\n          val.toString().length >= 3 &&\n          val.toString().length <= 20\n      )\n      .required(\"This field is required!\"),\n    email: Yup.string()\n      .email(\"This is not a valid email.\")\n      .required(\"This field is required!\"),\n    password: Yup.string()\n      .test(\n        \"len\",\n        \"The password must be between 6 and 40 characters.\",\n        (val) =>\n          val &&\n          val.toString().length >= 6 &&\n          val.toString().length <= 40\n      )\n      .required(\"This field is required!\"),\n  });\n\n  const handleRegister = (formValue) => {\n    const { username, email, password } = formValue;\n\n    setSuccessful(false);\n\n    dispatch(register({ username, email, password }))\n      .unwrap()\n      .then(() => {\n        setSuccessful(true);\n      })\n      .catch(() => {\n        setSuccessful(false);\n      });\n  };\n\n  return (\n    <div className=\"col-md-12 signup-form\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleRegister}\n        >\n          <Form>\n            {!successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                  <ErrorMessage\n                    name=\"username\"\n                    component=\"div\"\n                    className=\"alert alert-danger\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field name=\"email\" type=\"email\" className=\"form-control\" />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"alert alert-danger\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className=\"form-control\"\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"alert alert-danger\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n          </Form>\n        </Formik>\n      </div>\n\n      {message && (\n        <div className=\"form-group\">\n          <div\n            className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\n            role=\"alert\"\n          >\n            {message}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}