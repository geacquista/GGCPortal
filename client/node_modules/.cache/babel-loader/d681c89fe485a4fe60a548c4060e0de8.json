{"ast":null,"code":"import _defineProperty from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _this = this,\n  _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js\";\nimport edit_icon from \"../../assets/img/edit_white.svg\";\nimport delete_icon from \"../../assets/img/trash_white.svg\";\nimport React, { useState, Component } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice';\nimport { retrieveShippingAddress } from '../../store/address_slice';\nimport { findOrderLineByOrderID } from \"../../store/orderline_slice\";\nimport { findBySKU, retrieveProducts } from \"../../store/product_slice\";\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\n// import ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\n\n// const useOrderForm = (order) => {\n\n// \tconst dispatch = useDispatch();\n// \t  const [inputs, setInputs] = useState(order)\n// \t  /* const [newOrder, setOrder] = useState(order) */\n\n// \tconst ordersAmount = useSelector((state) => state.orders.length);\n\n// \t  const handleSubmit = (event) => {\n// \t\t  if(event) {\n// \t\t\t  event.preventDefault()\n// \t\t\t  dispatch(\n// \t\t);\n// \t\t  }\n// \t  }\n// \t  const handleInputChange = (event) => {\n// \t\t  event.persist()\n// \t\t  setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t  }\n// \t  return {\n// \t\t  handleSubmit,\n// \t\t  handleInputChange,\n// \t\t  inputs\n// \t  };\n//   }\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\nvar OrderViewOnly = function OrderViewOnly(_ref) {\n  var order = _ref.order,\n    viewOnly = _ref.viewOnly;\n  console.log(order);\n  var viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n  // let recipient\n  // if(order.isGift){\n  // \trecipient = order.giftFor\n\n  // } else{\n  // \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n  // }\n\n  // var numberOfFlavors = 0\n  // order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n  // var numberOfLogs = 0\n  // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n};\n\nvar ShippingInfo = function ShippingInfo(_ref2) {\n  var streetAddressOne = _ref2.streetAddressOne,\n    streetAddressTwo = _ref2.streetAddressTwo,\n    city = _ref2.city,\n    state = _ref2.state,\n    zip = _ref2.zip;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_Shipping_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Street Address\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 6\n    }\n  }, streetAddressOne, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 6\n    }\n  }), \" \", streetAddressTwo, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 6\n    }\n  }), \" \", city, \", \", state, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 31\n    }\n  }), zip)))));\n};\nvar GeneralInfoView = function GeneralInfoView(_ref3) {\n  var referenceNumber = _ref3.referenceNumber,\n    datePlaced = _ref3.datePlaced,\n    trackingNumber = _ref3.trackingNumber,\n    orderStatus = _ref3.orderStatus;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_General_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 10\n    }\n  }, \"Reference #\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 10\n    }\n  }, referenceNumber))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 10\n    }\n  }, \"Date Placed\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 10\n    }\n  }, datePlaced))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 10\n    }\n  }, \"Tracking #\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }\n  }, trackingNumber))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 10\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 10\n    }\n  }, orderStatus)))));\n};\nvar GeneralInfoEdit = function GeneralInfoEdit(_ref4) {\n  var referenceNumber = _ref4.referenceNumber,\n    datePlaced = _ref4.datePlaced,\n    trackingNumber = _ref4.trackingNumber,\n    orderStatus = _ref4.orderStatus,\n    handleChange = _ref4.handleChange;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_General_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ref\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 40\n    }\n  }, \"Reference #\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"ref\",\n    required: true,\n    value: referenceNumber || '',\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"ref\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 41\n    }\n  }, \"Date Placed\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"date\",\n    value: datePlaced || '',\n    onChange: handleChange,\n    name: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tracking\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 45\n    }\n  }, \"Tracking #\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"tracking\",\n    value: trackingNumber || '',\n    onChange: handleChange,\n    name: \"tracking\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 43\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"status\",\n    value: orderStatus || '',\n    onChange: handleChange,\n    name: \"status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  })));\n};\nvar ExistingOrder = /*#__PURE__*/function (_Component) {\n  _inherits(ExistingOrder, _Component);\n  function ExistingOrder(props) {\n    var _this2;\n    _classCallCheck(this, ExistingOrder);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ExistingOrder).call(this, props));\n\n    // this.editOrder = this.editOrder.bind(this)\n    _this2.deleteCurrOrder = _this2.deleteCurrOrder.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updateViewOnly = _this2.updateViewOnly.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.editOrder = _this2.editOrder.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.getShippingInfo = _this2.getShippingInfo.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      orderID: -1,\n      activeOrder: {\n        referenceNumber: \"\",\n        datePlaced: \"\",\n        orderStatus: \"\",\n        trackingNumber: \"\",\n        giftFor: \"\",\n        giftMessage: \"\",\n        isGift: 1,\n        customer: {\n          customerID: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          phoneNumber: \"\"\n        },\n        address: {\n          shippingID: \"\",\n          streetAddressOne: \"\",\n          streetAddressTwo: \"\",\n          city: \"\",\n          state: \"\",\n          zip: \"\"\n        },\n        invoice: {\n          invoiceNumber: \"NA\",\n          revenue: \"\",\n          expense: \"\",\n          isPaid: \"\"\n        },\n        productsOrdered: [{\n          lineOrderID: \"\",\n          lineProductID: \"\",\n          qtyOrdered: 0\n          // name: \"\",\n          // description: \"\"\n        }]\n      },\n\n      viewOnly: true\n    };\n    return _this2;\n  }\n  _createClass(ExistingOrder, [{\n    key: \"updateViewOnly\",\n    value: function updateViewOnly() {\n      this.setState({\n        viewOnly: !this.state.viewOnly\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveProducts();\n      var _parseInt = parseInt(this.props.order.orderID),\n        orderId = _parseInt.orderId;\n      var _this$props$order = this.props.order,\n        referenceNumber = _this$props$order.referenceNumber,\n        datePlaced = _this$props$order.datePlaced,\n        orderStatus = _this$props$order.orderStatus,\n        trackingNumber = _this$props$order.trackingNumber,\n        giftFor = _this$props$order.giftFor,\n        giftMessage = _this$props$order.giftMessage,\n        isGift = _this$props$order.isGift,\n        customerId = _this$props$order.customerId,\n        shippingId = _this$props$order.shippingId;\n      this.setState({\n        orderID: orderId,\n        activeOrder: {\n          referenceNumber: referenceNumber,\n          datePlaced: datePlaced,\n          orderStatus: orderStatus,\n          trackingNumber: trackingNumber,\n          giftFor: giftFor,\n          giftMessage: giftMessage,\n          isGift: isGift,\n          customer: {\n            customerID: customerId,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\"\n          },\n          address: {\n            shippingID: shippingId,\n            streetAddressOne: \"\",\n            streetAddressTwo: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\"\n          }\n          // invoice: {\n          // \tinvoiceNumber: \"NA\",\n          // \trevenue: \"\",\n          // \texpense: \"\",\n          // \tisPaid: \"\",\n          // },\n          // productsOrdered: [\n          // \t{\n          // \t\tlineOrderID: \"\",\n          // \t\tlineProductID: \"\",\n          // \t\tqtyOrdered: 0,\n          // \t\t// name: \"\",\n          // \t\t// description: \"\"\n          // \t}, \n          // ],\n        }\n      });\n\n      this.getShippingInfo(this.state.activeOrder.address.shippingID);\n    }\n  }, {\n    key: \"getShippingInfo\",\n    value: function getShippingInfo(id) {\n      var _this3 = this;\n      this.props.retrieveShippingAddress({\n        id: id\n      }).then(function (data) {\n        _this3.setState({\n          activeOrder: {\n            address: {\n              streetAddressOne: data.payload.streetAddressOne,\n              streetAddressTwo: data.payload.streetAddressTwo,\n              city: data.payload.city,\n              state: data.payload.state,\n              zip: data.payload.zip\n            }\n          }\n        });\n        console.log(data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"saveEdits\",\n    value: function saveEdits() {\n      console.log(\"edit order\");\n      //updateORder\n    }\n  }, {\n    key: \"deleteCurrOrder\",\n    value: function deleteCurrOrder(id, event) {\n      var _this4 = this;\n      this.props.deleteOrder({\n        id: this.state.orderID\n      }).then(function () {\n        _this4.props.orderCardOnDelete(id, event);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var target = e.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      var _this$props = this.props,\n        order = _this$props.order,\n        activeTabId = _this$props.activeTabId;\n      var viewOnly = this.state.viewOnly;\n      var address = this.state.activeOrder.address;\n      console.log(address);\n      if (viewOnly) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView_Header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.updateViewOnly,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: edit_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 7\n          }\n        }, \"Edit Order\")), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: function onClick(event) {\n            return _this5.deleteCurrOrder(activeTabId, event);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: delete_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 7\n          }\n        }, \"Delete Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(GeneralInfoView, {\n          order: order,\n          viewOnly: viewOnly,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(CustomerInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(GiftInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ShippingInfo, {\n          shippingDetails: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(InvoiceInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ProductInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 7\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView_Header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.editOrder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: edit_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 7\n          }\n        }, \"Save Order\")), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.updateViewOnly,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: delete_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 7\n          }\n        }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 6\n          }\n        })));\n      }\n    }\n  }]);\n  return ExistingOrder;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    shippingAddresses: state.shippingAddresses\n  };\n};\nexport default connect(mapStateToProps, {\n  deleteOrder: deleteOrder,\n  retrieveOrder: retrieveOrder,\n  updateOrder: updateOrder,\n  retrieveShippingAddress: retrieveShippingAddress,\n  retrieveProducts: retrieveProducts,\n  findBySKU: findBySKU,\n  findOrderLineByOrderID: findOrderLineByOrderID\n})(ExistingOrder);","map":{"version":3,"names":["React","useState","Component","connect","useDispatch","useSelector","updateOrder","deleteOrder","retrieveOrder","retrieveShippingAddress","findOrderLineByOrderID","findBySKU","retrieveProducts","CustomerInfo","InvoiceInfo","GiftInfo","GeneralInfo","ProductInfo","OrderViewOnly","order","viewOnly","console","log","viewType","ShippingInfo","streetAddressOne","streetAddressTwo","city","state","zip","fontWeight","GeneralInfoView","referenceNumber","datePlaced","trackingNumber","orderStatus","GeneralInfoEdit","handleChange","e","ExistingOrder","props","deleteCurrOrder","bind","updateViewOnly","editOrder","getShippingInfo","orderID","activeOrder","giftFor","giftMessage","isGift","customer","customerID","firstName","lastName","email","phoneNumber","address","shippingID","invoice","invoiceNumber","revenue","expense","isPaid","productsOrdered","lineOrderID","lineProductID","qtyOrdered","setState","parseInt","orderId","customerId","shippingId","id","then","data","payload","catch","event","orderCardOnDelete","target","value","type","checked","name","activeTabId","edit_icon","paddingRight","delete_icon","mapStateToProps","shippingAddresses"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js"],"sourcesContent":["import edit_icon from '../../assets/img/edit_white.svg'\nimport delete_icon from '../../assets/img/trash_white.svg'\nimport React, { useState, Component } from 'react'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice'\nimport {retrieveShippingAddress} from '../../store/address_slice'\n\nimport { findOrderLineByOrderID } from \"../../store/orderline_slice\";\nimport { findBySKU, retrieveProducts } from \"../../store/product_slice\";\n\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\n// import ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\n\n\n// const useOrderForm = (order) => {\n\n// \tconst dispatch = useDispatch();\n// \t  const [inputs, setInputs] = useState(order)\n// \t  /* const [newOrder, setOrder] = useState(order) */\n  \n// \tconst ordersAmount = useSelector((state) => state.orders.length);\n  \n  \n// \t  const handleSubmit = (event) => {\n// \t\t  if(event) {\n// \t\t\t  event.preventDefault()\n// \t\t\t  dispatch(\n// \t\t);\n// \t\t  }\n// \t  }\n// \t  const handleInputChange = (event) => {\n// \t\t  event.persist()\n// \t\t  setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t  }\n// \t  return {\n// \t\t  handleSubmit,\n// \t\t  handleInputChange,\n// \t\t  inputs\n// \t  };\n//   }\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\n const OrderViewOnly = ({order, viewOnly}) => {\n\t\n\tconsole.log(order)\n\n\tconst viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n\t// let recipient\n\t// if(order.isGift){\n\t// \trecipient = order.giftFor\n\n\t// } else{\n\t// \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n\t// }\n\n\t// var numberOfFlavors = 0\n\t// order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n\t// var numberOfLogs = 0\n\t// order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\t\n\t\n}\n\nconst ShippingInfo = ({streetAddressOne, streetAddressTwo, city, state, zip}) => {\n\treturn (\n\t\t<div id='OrderView_Shipping_Details'>\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address</h4></td>\n\t\t\t\t<td>\n\t\t\t\t\t<h4>{streetAddressOne}\n\t\t\t\t\t<br></br> {streetAddressTwo}\n\t\t\t\t\t<br></br> {city}, {state}<br></br>{zip}\n\t\t\t\t\t</h4>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t{/* <tr>\n\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n\t\t\t\t<td><h4>{order.shipmentTrackingNumber}</h4></td>\n\t\t\t</tr> */}\n\t\t\t{/* <tr>\n\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4>{order.giftMessage}</h4></td>}\n\t\t\t</tr> */}\n\t\t</table>\n\t</div>\n\t)\n}\n\nconst GeneralInfoView = ({referenceNumber, datePlaced, trackingNumber, orderStatus}) => {\n\treturn (\n\t\t<div id='OrderView_General_Details'>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n\t\t\t\t\t<td><h4>{referenceNumber}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n\t\t\t\t\t<td><h4>{datePlaced}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n\t\t\t\t\t<td><h4>{trackingNumber}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Status</h4></td>\n\t\t\t\t\t<td><h4>{orderStatus}</h4></td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t);\t\n}\n\n\nconst GeneralInfoEdit = ({referenceNumber, datePlaced, trackingNumber, orderStatus, handleChange}) => {\n\n\treturn(\n            <div id='OrderView_General_Details'>\n                <div className=\"form-group\">\n                  <label htmlFor=\"ref\"><h4 style={{fontWeight: 'bold'}}>Reference #</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"ref\"\n                    required\n                    value={referenceNumber || ''}\n                    onChange={(e) => handleChange(e)}\n                    name=\"ref\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"date\"><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"date\"\n                    value={datePlaced || ''}\n                    onChange={handleChange}\n                    name=\"date\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"tracking\"><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"tracking\"\n                    value={trackingNumber || ''}\n                    onChange={handleChange}\n                    name=\"tracking\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"status\"><h4 style={{fontWeight: 'bold'}}>Status</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"status\"\n                    value={orderStatus || ''}\n                    onChange={handleChange}\n                    name=\"status\"\n                  />\n                </div>\n            </div>\n        \n\t)\n}\n\nclass ExistingOrder extends Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  \t// this.editOrder = this.editOrder.bind(this)\n\t\tthis.deleteCurrOrder = this.deleteCurrOrder.bind(this)\n\t\tthis.updateViewOnly = this.updateViewOnly.bind(this)\n\t\tthis.editOrder = this.editOrder.bind(this)\n\t\tthis.getShippingInfo = this.getShippingInfo.bind(this);\n\t\t\n\n\t  this.state = {\n\t\torderID: -1,\n\t\tactiveOrder: {\n\t\t\treferenceNumber: \"\",\n\t\t\tdatePlaced: \"\",\n\t\t\torderStatus: \"\",\n\t\t\ttrackingNumber: \"\",\n\t\t\tgiftFor: \"\",\n\t\t\tgiftMessage: \"\",\n\t\t\tisGift: 1,\n\t\t\tcustomer: {\n\t\t\t\tcustomerID: \"\",\n\t\t\t\tfirstName: \"\",\n\t\t\t\tlastName: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tphoneNumber: \"\",\n\t\t\t },\n\t\t\taddress: {\n\t\t\t\tshippingID: \"\",\n\t\t\t\tstreetAddressOne: \"\",\n\t\t\t\tstreetAddressTwo: \"\",\n\t\t\t\tcity: \"\",\n\t\t\t\tstate: \"\",\n\t\t\t\tzip: \"\"\n\t\t\t},\n\t\t\tinvoice: {\n\t\t\t\tinvoiceNumber: \"NA\",\n\t\t\t\trevenue: \"\",\n\t\t\t\texpense: \"\",\n\t\t\t\tisPaid: \"\",\n\t\t\t},\n\t\t\tproductsOrdered: [\n\t\t\t\t{\n\t\t\t\t\tlineOrderID: \"\",\n\t\t\t\t\tlineProductID: \"\",\n\t\t\t\t\tqtyOrdered: 0,\n\t\t\t\t\t// name: \"\",\n\t\t\t\t\t// description: \"\"\n\t\t\t\t}, \n\t\t\t],\n\t\t},\n\t\tviewOnly: true,\n\t  }\n\t}\n\n\tupdateViewOnly() {\n\t\tthis.setState({\n\t\t\tviewOnly: !this.state.viewOnly\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n        this.props.retrieveProducts();\n\t\tconst {orderId} = parseInt(this.props.order.orderID)\n\t\tconst {referenceNumber, datePlaced, orderStatus, trackingNumber, giftFor, giftMessage, isGift, customerId, shippingId} = this.props.order\n\t\tthis.setState({\n\t\t\torderID: orderId,\n\t\t\tactiveOrder: {\n\t\t\t\treferenceNumber: referenceNumber,\n\t\t\t\tdatePlaced: datePlaced,\n\t\t\t\torderStatus: orderStatus,\n\t\t\t\ttrackingNumber: trackingNumber,\n\t\t\t\tgiftFor: giftFor,\n\t\t\t\tgiftMessage: giftMessage,\n\t\t\t\tisGift: isGift,\n\t\t\t\tcustomer: {\n\t\t\t\t\tcustomerID: customerId,\n\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\tlastName: \"\",\n\t\t\t\t\temail: \"\",\n\t\t\t\t\tphoneNumber: \"\",\n\t\t\t\t},\n\t\t\t\taddress: {\n\t\t\t\t\tshippingID: shippingId,\n\t\t\t\t\tstreetAddressOne: \"\",\n\t\t\t\t\tstreetAddressTwo: \"\",\n\t\t\t\t\tcity: \"\",\n\t\t\t\t\tstate: \"\",\n\t\t\t\t\tzip: \"\"\n\t\t\t\t},\n\t\t\t// invoice: {\n\t\t\t// \tinvoiceNumber: \"NA\",\n\t\t\t// \trevenue: \"\",\n\t\t\t// \texpense: \"\",\n\t\t\t// \tisPaid: \"\",\n\t\t\t// },\n\t\t\t// productsOrdered: [\n\t\t\t// \t{\n\t\t\t// \t\tlineOrderID: \"\",\n\t\t\t// \t\tlineProductID: \"\",\n\t\t\t// \t\tqtyOrdered: 0,\n\t\t\t// \t\t// name: \"\",\n\t\t\t// \t\t// description: \"\"\n\t\t\t// \t}, \n\t\t\t// ],\n\t\t\t}\n\t\t})\n\t\tthis.getShippingInfo(this.state.activeOrder.address.shippingID)\n\n\t}\n\n\tgetShippingInfo(id) {\n        this.props\n\t\t\t.retrieveShippingAddress({id})\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tactiveOrder: {\n\t\t\t\t\t\taddress: {\n\t\t\t\t\t\t\tstreetAddressOne: data.payload.streetAddressOne,\n\t\t\t\t\t\t\tstreetAddressTwo: data.payload.streetAddressTwo,\n\t\t\t\t\t\t\tcity: data.payload.city,\n\t\t\t\t\t\t\tstate: data.payload.state,\n\t\t\t\t\t\t\tzip: data.payload.zip,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconsole.log(data);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n\n\tsaveEdits() {\n\t\tconsole.log(\"edit order\")\n\t\t//updateORder\n\t}\n\n\tdeleteCurrOrder(id, event) {\n\t\tthis.props\n\t\t\t.deleteOrder({id: (this.state.orderID)}) \n\t\t\t.then(() => {\n\t\t\t\tthis.props.orderCardOnDelete(id, event)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n\n    handleInputChange(e) {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n        [name]: value\n        });\n    }\n\n  \n\trender() {\n\n\t\tconst {order, activeTabId} = this.props;\n\t\tconst {viewOnly} = this.state;\n\n\t\tconst {address} = this.state.activeOrder\n\t\tconsole.log(address)\n\n\t\tif (viewOnly) {\n\t\t\treturn (\n\t\t\t\t<div id='OrderView'>\n\t\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t\t<button className='OrderActionButton' onClick={ this.updateViewOnly}>\n\t\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Edit Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t\t<button className='OrderActionButton' onClick={(event) => this.deleteCurrOrder(activeTabId, event)}>\n\t\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Delete Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='Row'>\n\t\t\t\t\t<div className='Column'>\t\t\n\t\t\t\t\t\t<GeneralInfoView order={order} viewOnly={viewOnly}/>\n\t\t\t\t\t\t<CustomerInfo order={order}/>\n\t\t\t\t\t\t<GiftInfo order={order}/>\n\t\t\t\t\t\t<ShippingInfo shippingDetails={address}/>\n\t\t\t\t\t\t<InvoiceInfo order={order}/>\n\t\t\t\t\t\t<ProductInfo order={order}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div id='OrderView'>\n\t\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t\t<button className='OrderActionButton' onClick={this.editOrder}>\n\t\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Save Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t\t<button className='OrderActionButton' onClick={(this.updateViewOnly)}>\n\t\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Cancel</h4>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='Row'>\n\t\t\t\t\t<div className='Column'>\t\t\n\t\t\t\t\t\t{/* <GeneralInfoEdit order={order}/>\n\t\t\t\t\t\t<CustomerInfoEdit order={order}/>\n\t\t\t\t\t\t<GiftInfoEdit order={order}/>\n\t\t\t\t\t\t<ShippingInfoEdit order={order}/>\n\t\t\t\t\t\t<InvoiceInfoEdit order={order}/>\n\t\t\t\t\t\t<ProductInfoEdit order={order}/> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n  }\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\n\treturn {\n        shippingAddresses: state.shippingAddresses\n\n\t};\n  };\n  \nexport default connect(mapStateToProps, { deleteOrder, retrieveOrder, updateOrder, retrieveShippingAddress, retrieveProducts, findBySKU, findOrderLineByOrderID })(ExistingOrder);\n\n"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE/D,SAASC,WAAW,EAAEC,WAAW,EAAEC,aAAa,QAAQ,yBAAyB;AACjF,SAAQC,uBAAuB,QAAO,2BAA2B;AAEjE,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,2BAA2B;AAEvE,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,WAAW,MAAM,uCAAuC;AAC/D;AACA,OAAOC,WAAW,MAAM,uCAAuC;;AAG/D;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACC,IA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"},"metadata":{},"sourceType":"module"}