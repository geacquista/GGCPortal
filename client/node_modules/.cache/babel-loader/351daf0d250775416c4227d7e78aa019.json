{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js\";\nimport edit_icon from \"../../assets/img/edit_white.svg\";\nimport delete_icon from \"../../assets/img/trash_white.svg\";\nimport React, { useState, Component } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice';\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\nimport ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\nvar useOrderForm = function useOrderForm(order) {\n  var dispatch = useDispatch();\n  var _useState = useState(order),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputs = _useState2[0],\n    setInputs = _useState2[1];\n  /* const [newOrder, setOrder] = useState(order) */\n  var ordersAmount = useSelector(function (state) {\n    return state.orders.length;\n  });\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n      dispatch();\n    }\n  };\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputs(function (inputs) {\n      return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n  return {\n    handleSubmit: handleSubmit,\n    handleInputChange: handleInputChange,\n    inputs: inputs\n  };\n};\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\nvar OrderView = function OrderView(_ref) {\n  var order = _ref.order,\n    viewType = _ref.viewType;\n  // const viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n  // let recipient\n  // if(order.isGift){\n  // \trecipient = order.giftFor\n\n  // } else{\n  // \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n  // }\n\n  // var numberOfFlavors = 0\n  // order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n  // var numberOfLogs = 0\n  // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(GeneralInfo, {\n    order: order,\n    viewType: viewType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomerInfo, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(GiftInfo, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ShippingInfo, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(InvoiceInfo, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ProductInfo, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  })));\n};\nexport var ButtonView = function ButtonView(_ref2) {\n  var viewOnly = _ref2.viewOnly;\n  if (viewOnly) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"OrderView\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"OrderView_Header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"OrderActionButton\",\n      onClick: _this.updateViewOnly,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: edit_icon,\n      alt: \"add order\",\n      style: {\n        paddingRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 6\n      }\n    }, \"Edit Order\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"OrderActionButton\",\n      onClick: function onClick(event) {\n        return _this.deleteCurrOrder(activeTabId, event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: delete_icon,\n      alt: \"add order\",\n      style: {\n        paddingRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 6\n      }\n    }, \"Delete Order\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"OrderView\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"OrderView_Header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"OrderActionButton\",\n      onClick: _this.editOrder,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: edit_icon,\n      alt: \"add order\",\n      style: {\n        paddingRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }\n    }, \"Save Order\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"OrderActionButton\",\n      onClick: _this.updateViewOnly,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: delete_icon,\n      alt: \"add order\",\n      style: {\n        paddingRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 6\n      }\n    }, \"Cancel\"))));\n  }\n};\nvar ExistingOrder = /*#__PURE__*/function (_Component) {\n  _inherits(ExistingOrder, _Component);\n  function ExistingOrder(props) {\n    var _this2;\n    _classCallCheck(this, ExistingOrder);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ExistingOrder).call(this, props));\n\n    // this.editOrder = this.editOrder.bind(this)\n    _this2.deleteCurrOrder = _this2.deleteCurrOrder.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updateViewOnly = _this2.updateViewOnly.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.editOrder = _this2.editOrder.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      orderID: -1,\n      viewOnly: true\n    };\n    return _this2;\n  }\n  _createClass(ExistingOrder, [{\n    key: \"updateViewOnly\",\n    value: function updateViewOnly() {\n      this.setState({\n        viewOnly: !this.state.viewOnly\n      });\n    }\n  }, {\n    key: \"editOrder\",\n    value: function editOrder() {\n      console.log(\"edit order\");\n    }\n  }, {\n    key: \"deleteCurrOrder\",\n    value: function deleteCurrOrder(id, event) {\n      var _this3 = this;\n      this.props.deleteOrder({\n        id: this.state.orderID\n      }).then(function () {\n        _this3.props.orderCardOnDelete(id, event);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _parseInt = parseInt(this.props.order.orderID),\n        orderId = _parseInt.orderId;\n      this.setState({\n        orderID: orderId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        order = _this$props.order,\n        activeTabId = _this$props.activeTabId;\n      var viewOnly = this.state.viewOnly;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(ButtonView, {\n        viewType: viewOnly,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(OrderView, {\n        order: order,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n  return ExistingOrder;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\nexport default connect(mapStateToProps, {\n  deleteOrder: deleteOrder,\n  retrieveOrder: retrieveOrder,\n  updateOrder: updateOrder\n})(ExistingOrder);","map":{"version":3,"names":["React","useState","Component","connect","useDispatch","useSelector","updateOrder","deleteOrder","retrieveOrder","CustomerInfo","InvoiceInfo","GiftInfo","GeneralInfo","ShippingInfo","ProductInfo","useOrderForm","order","dispatch","inputs","setInputs","ordersAmount","state","orders","length","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","OrderView","viewType","ButtonView","viewOnly","updateViewOnly","edit_icon","paddingRight","deleteCurrOrder","activeTabId","delete_icon","editOrder","ExistingOrder","props","bind","orderID","setState","console","log","id","then","orderCardOnDelete","catch","e","parseInt","orderId","mapStateToProps"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js"],"sourcesContent":["import edit_icon from '../../assets/img/edit_white.svg'\nimport delete_icon from '../../assets/img/trash_white.svg'\nimport React, { useState, Component } from 'react'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice'\n\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\nimport ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\n\n\nconst useOrderForm = (order) => {\n\n\tconst dispatch = useDispatch();\n\t  const [inputs, setInputs] = useState(order)\n\t  /* const [newOrder, setOrder] = useState(order) */\n  \n\tconst ordersAmount = useSelector((state) => state.orders.length);\n  \n  \n\t  const handleSubmit = (event) => {\n\t\t  if(event) {\n\t\t\t  event.preventDefault()\n\t\t\t  dispatch(\n\t\t);\n\t\t  }\n\t  }\n\t  const handleInputChange = (event) => {\n\t\t  event.persist()\n\t\t  setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n\t  }\n\t  return {\n\t\t  handleSubmit,\n\t\t  handleInputChange,\n\t\t  inputs\n\t  };\n  }\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\n const OrderView = ({order, viewType}) => {\n\t\n\n\t// const viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n\t// let recipient\n\t// if(order.isGift){\n\t// \trecipient = order.giftFor\n\n\t// } else{\n\t// \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n\t// }\n\n\t// var numberOfFlavors = 0\n\t// order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n\t// var numberOfLogs = 0\n\t// order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\treturn (\n\t\t<div className='Row'>\n\t\t\t<div className='Column'>\t\t\n\t\t\t\t<GeneralInfo order={order} viewType={viewType}/>\n\t\t\t\t<CustomerInfo order={order}/>\n\t\t\t\t<GiftInfo order={order}/>\n\t\t\t\t<ShippingInfo order={order}/>\n\t\t\t\t<InvoiceInfo order={order}/>\n\t\t\t\t<ProductInfo order={order}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n \n\nexport const ButtonView = ({viewOnly}) => {\n\tif(viewOnly){\n\t\treturn (\n\t\t\t<div id='OrderView'>\n\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t<button className='OrderActionButton' onClick={ this.updateViewOnly}>\n\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t<h4>Edit Order</h4>\n\t\t\t\t</button>\n\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t<button className='OrderActionButton' onClick={(event) => this.deleteCurrOrder(activeTabId, event)}>\n\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t<h4>Delete Order</h4>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div id='OrderView'>\n\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t<button className='OrderActionButton' onClick={this.editOrder}>\n\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t<h4>Save Order</h4>\n\t\t\t\t</button>\n\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t<button className='OrderActionButton' onClick={(this.updateViewOnly)}>\n\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t<h4>Cancel</h4>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nclass ExistingOrder extends Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  \t// this.editOrder = this.editOrder.bind(this)\n\t\tthis.deleteCurrOrder = this.deleteCurrOrder.bind(this)\n\t\tthis.updateViewOnly = this.updateViewOnly.bind(this)\n\t\tthis.editOrder = this.editOrder.bind(this)\n\t\t\n\n\t  this.state = {\n\t\torderID: -1,\n\t\tviewOnly: true,\n\t  }\n\n\n\t}\n\n\tupdateViewOnly() {\n\t\tthis.setState({\n\t\t\tviewOnly: !this.state.viewOnly\n\t\t})\n\t}\n\n\teditOrder() {\n\t\tconsole.log(\"edit order\")\n\n\t}\n\n\tdeleteCurrOrder(id, event) {\n\t\tthis.props\n\t\t\t.deleteOrder({id: (this.state.orderID)}) \n\t\t\t.then(() => {\n\t\t\t\tthis.props.orderCardOnDelete(id, event)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n  \n\tcomponentDidMount() {\n\t\tconst {orderId} = parseInt(this.props.order.orderID)\n\t\tthis.setState({\n\t\t\torderID: orderId\n\t\t})\n\t}\n\n  \n\trender() {\n\n\t\tconst {order, activeTabId} = this.props;\n\t\tconst {viewOnly} = this.state;\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ButtonView viewType={viewOnly}/>\n\t\t\t\t<OrderView order={order}/>\n\t\t\t</div>\n\t\t)\n\t}\n  }\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\n\n\treturn {\n\n\t};\n  };\n  \nexport default connect(mapStateToProps, { deleteOrder, retrieveOrder, updateOrder })(ExistingOrder);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}