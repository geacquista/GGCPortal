{"ast":null,"code":"import _defineProperty from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _extraReducers;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport CustomerDataService from \"../services/CustomerDataService\";\n\n/**\n * This is what a customer looks like:\n * // fake data to use prior to DB\n  const initialState = [\n      {\n        id: '1',\n        email: 'customer@wpi.edu',\n        firstName: 'Frank',\n        lastName: 'McGovern',\n        phoneNumber: '20397588636',\n    \n      },\n  ]\n */\n\nexport var createCustomer = createAsyncThunk(\"shippingAddresses/create\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var semail, firstName, lastName, phoneNumber, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          semail = _ref.semail, firstName = _ref.firstName, lastName = _ref.lastName, phoneNumber = _ref.phoneNumber;\n          _context.next = 3;\n          return CustomerDataService.create({\n            email: email,\n            firstName: firstName,\n            lastName: lastName,\n            phoneNumber: phoneNumber\n          });\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var createCustomerWithAddress = createAsyncThunk(\"shippingAddresses/create\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n    var email, firstName, lastName, phoneNumber, addressId, res;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          email = _ref3.email, firstName = _ref3.firstName, lastName = _ref3.lastName, phoneNumber = _ref3.phoneNumber, addressId = _ref3.addressId;\n          _context2.next = 3;\n          return CustomerDataService.create({\n            email: email,\n            firstName: firstName,\n            lastName: lastName,\n            phoneNumber: phoneNumber,\n            addressId: addressId\n          });\n        case 3:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res.data);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var retrieveCustomers = createAsyncThunk(\"shippingAddresses/retrieve\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n  var res;\n  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.next = 2;\n        return CustomerDataService.getAll();\n      case 2:\n        res = _context3.sent;\n        return _context3.abrupt(\"return\", res.data);\n      case 4:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _callee3);\n})));\nexport var retrieveCustomer = createAsyncThunk(\"shippingAddresses/readCustomer\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref6) {\n    var id, res;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _ref6.id;\n          _context4.next = 3;\n          return CustomerDataService.get(id);\n        case 3:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res.data);\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function (_x3) {\n    return _ref7.apply(this, arguments);\n  };\n}());\nexport var updateCustomer = createAsyncThunk(\"shippingAddresses/update\", /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(_ref8) {\n    var id, data, res;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref8.id, data = _ref8.data;\n          _context5.next = 3;\n          return CustomerDataService.update(id, data);\n        case 3:\n          res = _context5.sent;\n          return _context5.abrupt(\"return\", res.data);\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function (_x4) {\n    return _ref9.apply(this, arguments);\n  };\n}());\nexport var deleteCustomer = createAsyncThunk(\"shippingAddresses/delete\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref10) {\n    var id;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          id = _ref10.id;\n          _context6.next = 3;\n          return CustomerDataService.remove(id);\n        case 3:\n          return _context6.abrupt(\"return\", {\n            id: id\n          });\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function (_x5) {\n    return _ref11.apply(this, arguments);\n  };\n}());\nexport var deleteAllCustomers = createAsyncThunk(\"shippingAddresses/deleteAll\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n  var res;\n  return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n    while (1) switch (_context7.prev = _context7.next) {\n      case 0:\n        _context7.next = 2;\n        return CustomerDataService.removeAll();\n      case 2:\n        res = _context7.sent;\n        return _context7.abrupt(\"return\", res.data);\n      case 4:\n      case \"end\":\n        return _context7.stop();\n    }\n  }, _callee7);\n})));\nexport var customerSlice = createSlice({\n  name: 'customers',\n  initialState: [],\n  reducers: {},\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, createCustomer.fulfilled, function (state, action) {\n    state.push(action.payload);\n  }), _defineProperty(_extraReducers, retrieveCustomers.fulfilled, function (state, action) {\n    return _toConsumableArray(action.payload);\n  }), _defineProperty(_extraReducers, retrieveCustomer.fulfilled, function (state, action) {\n    return _toConsumableArray(action.payload);\n  }), _defineProperty(_extraReducers, updateCustomer.fulfilled, function (state, action) {\n    var index = state.findIndex(function (order) {\n      return order.id === action.payload.id;\n    });\n    state[index] = _objectSpread({}, state[index], action.payload);\n  }), _defineProperty(_extraReducers, deleteCustomer.fulfilled, function (state, action) {\n    var index = state.findIndex(function (_ref13) {\n      var id = _ref13.id;\n      return id === action.payload.id;\n    });\n    state.splice(index, 1);\n  }), _defineProperty(_extraReducers, deleteAllCustomers.fulfilled, function (state, action) {\n    return [];\n  }), _extraReducers)\n});\nexport default customerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","CustomerDataService","createCustomer","semail","firstName","lastName","phoneNumber","create","email","res","data","createCustomerWithAddress","addressId","retrieveCustomers","getAll","retrieveCustomer","id","get","updateCustomer","update","deleteCustomer","remove","deleteAllCustomers","removeAll","customerSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","push","payload","index","findIndex","order","splice","reducer"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/store/customer_slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport CustomerDataService from \"../services/CustomerDataService\";\n\n/**\n * This is what a customer looks like:\n * // fake data to use prior to DB\n  const initialState = [\n      {\n        id: '1',\n        email: 'customer@wpi.edu',\n        firstName: 'Frank',\n        lastName: 'McGovern',\n        phoneNumber: '20397588636',\n    \n      },\n  ]\n */\n\nexport const createCustomer = createAsyncThunk(\n  \"shippingAddresses/create\",\n  async ({ semail, firstName, lastName, phoneNumber}) => {\n    const res = await CustomerDataService.create({ email, firstName, lastName, phoneNumber });\n    return res.data;\n  }\n);\n\nexport const createCustomerWithAddress = createAsyncThunk(\n    \"shippingAddresses/create\",\n    async ({email, firstName, lastName, phoneNumber, addressId}) => {\n      const res = await CustomerDataService.create({ email, firstName, lastName, phoneNumber, addressId });\n      return res.data;\n    }\n  );\n  \n\nexport const retrieveCustomers = createAsyncThunk(\n  \"shippingAddresses/retrieve\",\n  async () => {\n    const res = await CustomerDataService.getAll();\n    return res.data;\n  }\n);\n\nexport const retrieveCustomer = createAsyncThunk(\n  \"shippingAddresses/readCustomer\",\n  async ({ id }) => {\n    const res = await CustomerDataService.get(id);\n    return res.data;\n  }\n)\n\nexport const updateCustomer = createAsyncThunk(\n  \"shippingAddresses/update\",\n  async ({ id, data }) => {\n    const res = await CustomerDataService.update(id, data);\n    return res.data;\n  }\n);\n\nexport const deleteCustomer = createAsyncThunk(\n  \"shippingAddresses/delete\",\n  async ({ id }) => {\n    await CustomerDataService.remove(id);\n    return { id };\n  }\n);\n\nexport const deleteAllCustomers = createAsyncThunk(\n  \"shippingAddresses/deleteAll\",\n  async () => {\n    const res = await CustomerDataService.removeAll();\n    return res.data;\n  }\n);\n\n\nexport const customerSlice = createSlice({\n  name: 'customers',\n  initialState: [],\n  reducers: {\n  },\n  extraReducers: {\n    [createCustomer.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [retrieveCustomers.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [retrieveCustomer.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [updateCustomer.fulfilled]: (state, action) => {\n      const index = state.findIndex(order => order.id === action.payload.id);\n      state[index] = {\n        ...state[index],\n        ...action.payload,\n      };\n    },\n    [deleteCustomer.fulfilled]: (state, action) => {\n      let index = state.findIndex(({ id }) => id === action.payload.id);\n      state.splice(index, 1);\n    },\n    [deleteAllCustomers.fulfilled]: (state, action) => {\n      return [];\n    },\n  },\n});\n\nexport default customerSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}