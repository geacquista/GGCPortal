{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\nimport { retrieveCustomer } from \"../../../store/customer_slice\";\nimport { retrieveInvoice } from \"../../../store/invoice_slice\";\nimport { retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder } from \"../../../store/order_slice\";\nvar OrderCard = /*#__PURE__*/function (_Component) {\n  _inherits(OrderCard, _Component);\n  function OrderCard(props) {\n    _classCallCheck(this, OrderCard);\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderCard).call(this, props));\n  }\n\n  // This gets the users when the component loads\n  _createClass(OrderCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveOrder(state.order.orderID);\n      this.props.retrieveCustomer();\n      this.props.retrieveInvoice();\n      this.props.retrieveOrderLine();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        orders = _this$props.orders,\n        customers = _this$props.customers,\n        orderline = _this$props.orderline,\n        invoices = _this$props.invoices;\n      var currentActiveOrders = orders.filter(function (order) {\n        return order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped';\n      });\n      // customer={customers.filter(customer => customer.customerID === order.customerId)[0]}\n      var numberOfLogs = 0;\n      // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n      var firstName = '',\n        lastName = '';\n      if (customer !== undefined) {\n        console.log(customer);\n        console.log(customer.firstName + ', ' + customer.lastName);\n        firstName += customer.firstName;\n        lastName += customer.lastName;\n        console.log(firstName);\n      }\n      var datePlaced = new Date(order.datePlaced);\n      console.log(this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCard\",\n        onClick: orderCardOnClick(order),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCardHeader\",\n        style: {\n          backgroundColor: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }\n      }, lastName, \", \", firstName), /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }\n      }, \"Placed: \", format(datePlaced, \"MM-dd-yy\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCardContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }\n      }, \"Reference: \", order.referenceNumber), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }\n      }, \"Invoice: \", order.invoiceNumber === undefined ? 'NA' : order.invoiceNumber), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }\n      }, \"Logs Ordered: \", numberOfLogs)));\n    }\n  }]);\n  return OrderCard;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.orders,\n    customers: state.customers,\n    orderline: state.orderline,\n    invoices: state.invoices\n  };\n};\nexport default connect(mapStateToProps, {\n  retrieveOrder: retrieveOrder,\n  retrieveCustomer: retrieveCustomer,\n  retrieveOrderLines: retrieveOrderLines,\n  retrieveInvoice: retrieveInvoice\n})(OrderCard);","map":{"version":3,"names":["React","format","connect","retrieveCustomer","retrieveInvoice","retrieveOrderLines","retrieveOrder","OrderCard","props","state","order","orderID","retrieveOrderLine","orders","customers","orderline","invoices","currentActiveOrders","filter","orderStatus","numberOfLogs","firstName","lastName","customer","undefined","console","log","datePlaced","Date","orderCardOnClick","backgroundColor","color","fontWeight","float","referenceNumber","invoiceNumber","Component","mapStateToProps"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js"],"sourcesContent":["import React from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\n\n\nimport { retrieveCustomer } from \"../../../store/customer_slice\";\nimport { retrieveInvoice } from \"../../../store/invoice_slice\";\nimport { retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder } from \"../../../store/order_slice\";\n\n\nclass OrderCard extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t}\n  \n\t// This gets the users when the component loads\n\tcomponentDidMount() {\n\t  this.props.retrieveOrder(state.order.orderID);\n\t  this.props.retrieveCustomer();\n\t  this.props.retrieveInvoice();\n\t  this.props.retrieveOrderLine();\n\t}\n  \n\trender() {\n\t\tconst {orders, customers, orderline, invoices} = this.props;\n\t\t\n\t\tconst currentActiveOrders = orders.filter(order => (order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped'));\n\t\t// customer={customers.filter(customer => customer.customerID === order.customerId)[0]}\n\t\tvar numberOfLogs = 0;\n\t\t// order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\t\tvar firstName = '', lastName = '';\n\t\tif (customer !== undefined) {\n\t\t\tconsole.log(customer);\n\t\t\tconsole.log(customer.firstName + ', ' + customer.lastName);\n\t\t\tfirstName += customer.firstName;\n\t\t\tlastName += customer.lastName;\n\t\t\tconsole.log(firstName);\n\t\t}\n\t\tvar datePlaced = new Date(order.datePlaced);\n\n\n\t\tconsole.log(this.props)\n\t\treturn (\n\t\t\t<div className='OrderCard' onClick={orderCardOnClick(order)}>\n\t\t\t\t<div className='OrderCardHeader' style={{ backgroundColor: color }}>\n\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>{lastName}, {firstName}</h4>\n\t\t\t\t\t<h4 style={{float: 'right'}}>Placed: {format(datePlaced, \"MM-dd-yy\")}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className='OrderCardContent'>\n\t\t\t\t\t<h4>Reference: {order.referenceNumber}</h4>\n\t\t\t\t\t<h4>Invoice: {(order.invoiceNumber === undefined) ? 'NA' : order.invoiceNumber}</h4>\n\t\t\t\t\t<h4>Logs Ordered: {numberOfLogs}</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n  }\n  \n\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\n\treturn {\n\t  orders: state.orders,\n\t  customers: state.customers,\n\t  orderline: state.orderline,\n\t  invoices: state.invoices,\n\t};\n  };\n  \nexport default connect(mapStateToProps, {  retrieveOrder, retrieveCustomer, retrieveOrderLines, retrieveInvoice })(OrderCard);"],"mappings":"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"},"metadata":{},"sourceType":"module"}