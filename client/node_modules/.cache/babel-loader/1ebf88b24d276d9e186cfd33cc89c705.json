{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {};\nvar messageSlice = createSlice({\n  name: \"message\",\n  initialState: initialState,\n  reducers: {\n    setMessage: function setMessage(state, action) {\n      return {\n        message: action.payload\n      };\n    },\n    clearMessage: function clearMessage() {\n      return {\n        message: \"\"\n      };\n    }\n  }\n});\nvar reducer = messageSlice.reducer,\n  actions = messageSlice.actions;\nvar setMessage = actions.setMessage,\n  clearMessage = actions.clearMessage;\nexport { setMessage, clearMessage };\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","messageSlice","name","reducers","setMessage","state","action","message","payload","clearMessage","reducer","actions"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/client/src/store/message_slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nconst messageSlice = createSlice({\n  name: \"message\",\n  initialState,\n  reducers: {\n    setMessage: (state, action) => {\n      return { message: action.payload };\n    },\n    clearMessage: () => {\n      return { message: \"\" };\n    },\n  },\n});\n\nconst { reducer, actions } = messageSlice;\n\nexport const { setMessage, clearMessage } = actions\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,IAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,SAAS;EACfF,YAAY,EAAZA,YAAY;EACZG,QAAQ,EAAE;IACRC,UAAU,EAAE,oBAACC,KAAK,EAAEC,MAAM,EAAK;MAC7B,OAAO;QAAEC,OAAO,EAAED,MAAM,CAACE;MAAQ,CAAC;IACpC,CAAC;IACDC,YAAY,EAAE,wBAAM;MAClB,OAAO;QAAEF,OAAO,EAAE;MAAG,CAAC;IACxB;EACF;AACF,CAAC,CAAC;AAAC,IAEKG,OAAO,GAAcT,YAAY,CAAjCS,OAAO;EAAEC,OAAO,GAAKV,YAAY,CAAxBU,OAAO;AAAA,IAETP,UAAU,GAAmBO,OAAO,CAApCP,UAAU;EAAEK,YAAY,GAAKE,OAAO,CAAxBF,YAAY;AAAA;AACvC,eAAeC,OAAO"},"metadata":{},"sourceType":"module"}