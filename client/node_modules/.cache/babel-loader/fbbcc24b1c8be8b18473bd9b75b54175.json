{"ast":null,"code":"import _asyncToGenerator from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { CREATE_ORDER, RETRIEVE_ORDERS, UPDATE_ORDER, DELETE_ALL_ORDERS, DELETE_ORDER } from \"./actionTypes\";\nimport OrderService from \"../services/OrderDataService\";\nexport var createOrder = function createOrder(datePlaced, isGift, giftFor, giftMessage, trackingNumber, orderStatusId, shippingId, customerId, referenceNumber) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return OrderService.create({\n              datePlaced: datePlaced,\n              isGift: isGift,\n              giftFor: giftFor,\n              giftMessage: giftMessage,\n              trackingNumber: trackingNumber,\n              orderStatusId: orderStatusId,\n              shippingId: shippingId,\n              customerId: customerId,\n              referenceNumber: referenceNumber\n            });\n          case 3:\n            res = _context.sent;\n            dispatch({\n              type: CREATE_ORDER,\n              payload: res.data\n            });\n            return _context.abrupt(\"return\", Promise.resolve(res.data));\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", Promise.reject(_context.t0));\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var retrieveOrders = function retrieveOrders() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return OrderService.getAll();\n          case 3:\n            res = _context2.sent;\n            dispatch({\n              type: RETRIEVE_ORDERS,\n              payload: res.data\n            });\n            _context2.next = 10;\n            break;\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateOrder = function updateOrder(id, data) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return OrderService.update(id, data);\n          case 3:\n            res = _context3.sent;\n            dispatch({\n              type: UPDATE_ORDER,\n              payload: data\n            });\n            return _context3.abrupt(\"return\", Promise.resolve(res.data));\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", Promise.reject(_context3.t0));\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteOrder = function deleteOrder(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return OrderService.delete(id);\n          case 3:\n            dispatch({\n              type: DELETE_ORDER,\n              payload: {\n                id: id\n              }\n            });\n            _context4.next = 9;\n            break;\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 6]]);\n    }));\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteAllOrders = function deleteAllOrders() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return OrderService.deleteAll();\n          case 3:\n            res = _context5.sent;\n            dispatch({\n              type: DELETE_ALL_ORDERS,\n              payload: res.data\n            });\n            return _context5.abrupt(\"return\", Promise.resolve(res.data));\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", Promise.reject(_context5.t0));\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n\n// export const findOrdersByTitle = (title) => async (dispatch) => {\n//   try {\n//     const res = await OrderService.findByTitle(title);\n\n//     dispatch({\n//       type: RETRIEVE_ORDERS,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const handleClick = () => {\n//     if (name && email) {\n//       dispatch(\n//         userAdded({\n//           id: usersAmount + 1,\n//           name,\n//           email,\n//         })\n//       );\n\n//       setError(null);\n//       history.push(\"/\");\n//     } else {\n//       setError(\"Fill in all fields\");\n//     }\n\n//     setName(\"\");\n//     setEmail(\"\");\n//   };\n\n// from ui-actions\n// export const getUser = (history, userName, getUserURL) => {\n\n// \treturn async (dispatch) => {\n// \t\tconst login = async () => {\n// \t\t\tconst responseData = await fetch( getUserURL, {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: JSON.stringify({userName: userName}),\n// \t\t\t\theader: {},\n// \t\t\t});\n// \t\t\tif (responseData.status === 403) {\n// \t\t\t\thistory.logout();\n// \t\t\t\thistory.replace(\"/login\");\n// \t\t\t} else if (responseData.status === 200) {\n// \t\t\t\tconst data = await responseData.json();\n// \t\t\t\treturn data;\n// \t\t\t}\n// \t\t};\n// \t\ttry {\n// \t\t\tdispatch(uiActions.setIsLoading(true));\n// \t\t\tconst data = await login();\n// \t\t\tif (data.status !== 200) {\n// \t\t\t\tdispatch(uiActions.setIsError(true));\n// \t\t\t\tdispatch(uiActions.setErrorMsg(data.error.message));\n// \t\t\t} else {\n// \t\t\t\tdispatch(uiActions.setIsError(false));\n// \t\t\t\tdispatch(uiActions.setErrorMsg(\"\"));\n// \t\t\t\tconsole.log(\"[ Login User ] : \", data);\n// \t\t\t\tdispatch(uiActions.setLogin({token: data.response.jwt, userName: data.response.username}));\n// \t\t\t\tdispatch(uiActions.setSnackMsg(\"成功登入!\"));\n// \t\t\t\thistory.replace(\"/\");\n// \t\t\t}\n// \t\t} catch (err) {\n// \t\t\talert(err.message);\n// \t\t\tdispatch(uiActions.setIsError(true));\n// \t\t}\n// \t};\n// };\n\n// export const logout = () => {\n// \treturn async (dispatch) => {\n// \t\tdispatch(uiActions.setLogout());\n// \t}\n// }\n\n// export const setSnackMsg = (msg) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch(uiActions.setSnackMsg(msg));\n// \t}\n// }","map":{"version":3,"names":["CREATE_ORDER","RETRIEVE_ORDERS","UPDATE_ORDER","DELETE_ALL_ORDERS","DELETE_ORDER","OrderService","createOrder","datePlaced","isGift","giftFor","giftMessage","trackingNumber","orderStatusId","shippingId","customerId","referenceNumber","dispatch","create","res","type","payload","data","Promise","resolve","reject","retrieveOrders","getAll","console","log","updateOrder","id","update","deleteOrder","delete","deleteAllOrders","deleteAll"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/actions/order_actions.js"],"sourcesContent":["import { CREATE_ORDER, RETRIEVE_ORDERS, UPDATE_ORDER, DELETE_ALL_ORDERS, DELETE_ORDER } from \"./actionTypes\";\nimport OrderService from \"../services/OrderDataService\";\n\nexport const createOrder = (datePlaced, isGift, giftFor, giftMessage, trackingNumber, orderStatusId, shippingId, customerId, referenceNumber) => async (dispatch) => {\n  try {\n    const res = await OrderService.create({ datePlaced, isGift, giftFor, giftMessage, trackingNumber, orderStatusId, shippingId, customerId, referenceNumber });\n\n    dispatch({\n      type: CREATE_ORDER,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const retrieveOrders = () => async (dispatch) => {\n  try {\n    const res = await OrderService.getAll();\n\n    dispatch({\n      type: RETRIEVE_ORDERS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateOrder = (id, data) => async (dispatch) => {\n  try {\n    const res = await OrderService.update(id, data);\n\n    dispatch({\n      type: UPDATE_ORDER,\n      payload: data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    await OrderService.delete(id);\n\n    dispatch({\n      type: DELETE_ORDER,\n      payload: { id },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteAllOrders = () => async (dispatch) => {\n  try {\n    const res = await OrderService.deleteAll();\n\n    dispatch({\n      type: DELETE_ALL_ORDERS,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\n// export const findOrdersByTitle = (title) => async (dispatch) => {\n//   try {\n//     const res = await OrderService.findByTitle(title);\n\n//     dispatch({\n//       type: RETRIEVE_ORDERS,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const handleClick = () => {\n//     if (name && email) {\n//       dispatch(\n//         userAdded({\n//           id: usersAmount + 1,\n//           name,\n//           email,\n//         })\n//       );\n\n//       setError(null);\n//       history.push(\"/\");\n//     } else {\n//       setError(\"Fill in all fields\");\n//     }\n\n//     setName(\"\");\n//     setEmail(\"\");\n//   };\n\n// from ui-actions\n// export const getUser = (history, userName, getUserURL) => {\n\n// \treturn async (dispatch) => {\n// \t\tconst login = async () => {\n// \t\t\tconst responseData = await fetch( getUserURL, {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: JSON.stringify({userName: userName}),\n// \t\t\t\theader: {},\n// \t\t\t});\n// \t\t\tif (responseData.status === 403) {\n// \t\t\t\thistory.logout();\n// \t\t\t\thistory.replace(\"/login\");\n// \t\t\t} else if (responseData.status === 200) {\n// \t\t\t\tconst data = await responseData.json();\n// \t\t\t\treturn data;\n// \t\t\t}\n// \t\t};\n// \t\ttry {\n// \t\t\tdispatch(uiActions.setIsLoading(true));\n// \t\t\tconst data = await login();\n// \t\t\tif (data.status !== 200) {\n// \t\t\t\tdispatch(uiActions.setIsError(true));\n// \t\t\t\tdispatch(uiActions.setErrorMsg(data.error.message));\n// \t\t\t} else {\n// \t\t\t\tdispatch(uiActions.setIsError(false));\n// \t\t\t\tdispatch(uiActions.setErrorMsg(\"\"));\n// \t\t\t\tconsole.log(\"[ Login User ] : \", data);\n// \t\t\t\tdispatch(uiActions.setLogin({token: data.response.jwt, userName: data.response.username}));\n// \t\t\t\tdispatch(uiActions.setSnackMsg(\"成功登入!\"));\n// \t\t\t\thistory.replace(\"/\");\n// \t\t\t}\n// \t\t} catch (err) {\n// \t\t\talert(err.message);\n// \t\t\tdispatch(uiActions.setIsError(true));\n// \t\t}\n// \t};\n// };\n\n// export const logout = () => {\n// \treturn async (dispatch) => {\n// \t\tdispatch(uiActions.setLogout());\n// \t}\n// }\n\n// export const setSnackMsg = (msg) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch(uiActions.setSnackMsg(msg));\n// \t}\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}