{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js\";\nimport React, { Component } from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\nimport { retrieveCustomer, retrieveCustomers } from \"../../../store/customer_slice\";\nimport { retrieveInvoice, retrieveInvoices } from \"../../../store/invoice_slice\";\nimport { findOrderLineByOrderID, retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder, retrieveOrders } from \"../../../store/order_slice\";\nvar OrderCard = /*#__PURE__*/function (_Component) {\n  _inherits(OrderCard, _Component);\n  function OrderCard(props) {\n    var _this;\n    _classCallCheck(this, OrderCard);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderCard).call(this, props));\n    _this.handleOnClick = _this.handleOnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCustomer = _this.getCustomer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      tabData: {\n        order: {},\n        customer: {}\n      }\n    };\n    return _this;\n  }\n  _createClass(OrderCard, [{\n    key: \"handleOnClick\",\n    value: function handleOnClick(tabData) {\n      this.props.orderCardOnClick(tabData);\n    } // This gets the users when the component loads\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveOrders();\n      this.props.retrieveCustomers();\n      this.props.retrieveInvoices();\n      this.props.retrieveOrderLines();\n    }\n  }, {\n    key: \"getCustomer\",\n    value: function getCustomer(id) {\n      var _this2 = this;\n      console.log(this.props.order);\n      return this.props.retrieveCustomer(id).then(function (data) {\n        console.log(data);\n        _this2.setState({\n          order: _this2.props.order,\n          customer: data\n        });\n        console.log(data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props = this.props,\n        order = _this$props.order,\n        customers = _this$props.customers,\n        orderlines = _this$props.orderlines,\n        invoices = _this$props.invoices; // const {customerOnCard} = customers.filter(customer=> customer.customerID === order.customerId)\n      console.log(this.props);\n\n      // customer={}\n      var numberOfLogs = 0;\n      // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\t\t\n      // var datePlaced = new Date(order.datePlaced);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCard\",\n        onClick: function onClick() {\n          return _this3.handleOnClick(_this3.state.tabData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 4\n        }\n      }, customers && customers.filter(function (customer) {\n        return customer.customerID === order.customerId;\n      }).map(function (customer, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"OrderCardHeader\",\n          style: {\n            backgroundColor: _this3.props.color\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }\n        }, customer.lastName, \", \", customer.firstName))\n        // <li className={\"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\n        //     onClick={() => this.setActiveUser(user, index)} key={index}>\n        //     {user.nickname}\n        //     <button onClick={this.updateContent} type=\"submit\">Edit</button>\n        //     <button onClick={this.removeUser} type=\"delete\">Delete</button>\n        // </li>\n        ;\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCardContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n  return OrderCard;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  var orders = state.orders,\n    customers = state.customers,\n    invoices = state.invoices,\n    orderlines = state.orderlines;\n  return {\n    customer: state.customers,\n    invoices: state.invoices,\n    orderlines: state.orderlines\n  };\n};\nexport default connect(mapStateToProps, {\n  retrieveOrder: retrieveOrder,\n  retrieveCustomers: retrieveCustomers,\n  retrieveOrders: retrieveOrders,\n  retrieveOrderLines: retrieveOrderLines,\n  retrieveInvoices: retrieveInvoices,\n  retrieveCustomer: retrieveCustomer,\n  findOrderLineByOrderID: findOrderLineByOrderID,\n  retrieveInvoice: retrieveInvoice\n})(OrderCard);","map":{"version":3,"names":["React","Component","format","connect","retrieveCustomer","retrieveCustomers","retrieveInvoice","retrieveInvoices","findOrderLineByOrderID","retrieveOrderLines","retrieveOrder","retrieveOrders","OrderCard","props","handleOnClick","bind","getCustomer","state","tabData","order","customer","orderCardOnClick","id","console","log","then","data","setState","catch","e","customers","orderlines","invoices","numberOfLogs","filter","customerID","customerId","map","index","backgroundColor","color","fontWeight","lastName","firstName","mapStateToProps","orders"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\n\n\nimport { retrieveCustomer ,retrieveCustomers} from \"../../../store/customer_slice\";\nimport { retrieveInvoice, retrieveInvoices } from \"../../../store/invoice_slice\";\nimport { findOrderLineByOrderID, retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder, retrieveOrders } from \"../../../store/order_slice\";\n\n\nclass OrderCard extends Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  this.handleOnClick = this.handleOnClick.bind(this);\n\t  this.getCustomer = this.getCustomer.bind(this);\n\n\n\t  this.state = {\n\t\t\n\t\t tabData: {\n\t\t\torder: {},\n\t\t\tcustomer: {}\n\t\t},\n\n\t };\n\t}\n\n\thandleOnClick(tabData) {\n\t\tthis.props.orderCardOnClick(tabData)\n\t}\n\n\t// This gets the users when the component loads\n\tcomponentDidMount() {\n\t\tthis.props.retrieveOrders();\n\t\tthis.props.retrieveCustomers();\n\t\tthis.props.retrieveInvoices();\n\t\tthis.props.retrieveOrderLines();\n\n\t}\n\n\tgetCustomer(id) {\n\t\n\t\tconsole.log(this.props.order)\n\n\t\treturn this.props\n\t\t\t.retrieveCustomer(id)\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tthis.setState({\n\t\t\t\t\torder: this.props.order,\n\t\t\t\t\tcustomer: data,\n\t\t\t\t  });\n\t\t\t\tconsole.log(data);\n\t\t\t  })\n\t\t\t.catch((e) => {\n\t\t\tconsole.log(e);\n\t\t\t});\n\n\t}\n  \n\trender() {\n\t\tconst {order, customers, orderlines, invoices} = this.props;\n\t\t// const {customerOnCard} = customers.filter(customer=> customer.customerID === order.customerId)\n\t\tconsole.log(this.props);\n\t\t\n\n\t\t// customer={}\n\t\tvar numberOfLogs = 0;\n\t\t// order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\t\t\n\t\t// var datePlaced = new Date(order.datePlaced);\n\n\n\n\t\treturn (\n\t\t\t<div className='OrderCard' onClick={() => this.handleOnClick(this.state.tabData)}>\n                    {customers &&\n                      customers.filter(customer=> customer.customerID === order.customerId).map((customer, index) => (\n\t\t\t\t\t\t<div className='OrderCardHeader' style={{ backgroundColor: this.props.color }}>\n\t\t\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>{customer.lastName}, {customer.firstName}</h4>\n\t\t\t\t\t\t\t{/* <h4 style={{float: 'right'}}>Placed: {format(datePlaced, \"MM-dd-yy\")}</h4> */}\n\t\t\t\t\t\t</div>\n                        // <li className={\"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\n                        //     onClick={() => this.setActiveUser(user, index)} key={index}>\n                        //     {user.nickname}\n                        //     <button onClick={this.updateContent} type=\"submit\">Edit</button>\n                        //     <button onClick={this.removeUser} type=\"delete\">Delete</button>\n                        // </li>\n                      ))}\n\t\t\t\t\n\t\t\t\t<div className='OrderCardContent'>\n\t\t\t\t\t{/* <h4>Reference: {order.referenceNumber}</h4> */}\n\t\t\t\t\t{/* <h4>Invoice: {(order.invoiceNumber === undefined) ? 'NA' : order.invoiceNumber}</h4>\n\t\t\t\t\t<h4>Logs Ordered: {numberOfLogs}</h4> */}\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t);\t\n\t}\n  }\n  \n\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\t\n\tconst {orders, customers, invoices ,orderlines} = state;\n\t\n\treturn {\n\t\tcustomer: state.customers,\n\t\tinvoices: state.invoices,\n\t\torderlines: state.orderlines\n\t};\n  };\n  \nexport default connect(mapStateToProps, {  retrieveOrder, retrieveCustomers, retrieveOrders, retrieveOrderLines,retrieveInvoices, retrieveCustomer, findOrderLineByOrderID, retrieveInvoice })(OrderCard);"],"mappings":"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"},"metadata":{},"sourceType":"module"}