{"ast":null,"code":"import _toConsumableArray from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _this = this,\n  _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js\";\nimport edit_icon from \"../../assets/img/edit_white.svg\";\nimport delete_icon from \"../../assets/img/trash_white.svg\";\nimport React, { useState, Component } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice';\nimport { retrieveShippingAddress } from '../../store/address_slice';\nimport { retrieveCustomer } from '../../store/customer_slice';\nimport { retrieveInvoice } from '../../store/invoice_slice';\nimport { findOrderLineByOrderID } from \"../../store/orderline_slice\";\nimport { findBySKU, retrieveProducts } from \"../../store/product_slice\";\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\n// import ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\n\n// const useOrderForm = (order) => {\n\n// \tconst dispatch = useDispatch();\n// \t  const [inputs, setInputs] = useState(order)\n// \t  /* const [newOrder, setOrder] = useState(order) */\n\n// \tconst ordersAmount = useSelector((state) => state.orders.length);\n\n// \t  const handleSubmit = (event) => {\n// \t\t  if(event) {\n// \t\t\t  event.preventDefault()\n// \t\t\t  dispatch(\n// \t\t);\n// \t\t  }\n// \t  }\n// \t  const handleInputChange = (event) => {\n// \t\t  event.persist()\n// \t\t  setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t  }\n// \t  return {\n// \t\t  handleSubmit,\n// \t\t  handleInputChange,\n// \t\t  inputs\n// \t  };\n//   }\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\nvar OrderViewOnly = function OrderViewOnly(_ref) {\n  var order = _ref.order,\n    viewOnly = _ref.viewOnly;\n  console.log(order);\n  var viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n  // let recipient\n  // if(order.isGift){\n  // \trecipient = order.giftFor\n\n  // } else{\n  // \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n  // }\n\n  // var numberOfFlavors = 0\n  // order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n  // var numberOfLogs = 0\n  // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n};\n\nvar ShippingInfo = function ShippingInfo(_ref2) {\n  var streetAddressOne = _ref2.streetAddressOne,\n    streetAddressTwo = _ref2.streetAddressTwo,\n    city = _ref2.city,\n    state = _ref2.state,\n    zip = _ref2.zip;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_Shipping_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"Street Address\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 6\n    }\n  }, streetAddressOne, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 6\n    }\n  }), \" \", streetAddressTwo, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 6\n    }\n  }), \" \", city, \", \", state, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 31\n    }\n  }), zip)))));\n};\nvar GeneralInfoView = function GeneralInfoView(_ref3) {\n  var referenceNumber = _ref3.referenceNumber,\n    datePlaced = _ref3.datePlaced,\n    trackingNumber = _ref3.trackingNumber,\n    orderStatus = _ref3.orderStatus;\n  console.log(referenceNumber);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_General_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 10\n    }\n  }, \"Reference #\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 10\n    }\n  }, referenceNumber))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 10\n    }\n  }, \"Date Placed\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 10\n    }\n  }, datePlaced))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 10\n    }\n  }, \"Tracking #\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 10\n    }\n  }, trackingNumber))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 10\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 10\n    }\n  }, orderStatus)))));\n};\nvar GeneralInfoEdit = function GeneralInfoEdit(_ref4) {\n  var referenceNumber = _ref4.referenceNumber,\n    datePlaced = _ref4.datePlaced,\n    trackingNumber = _ref4.trackingNumber,\n    orderStatus = _ref4.orderStatus,\n    handleChange = _ref4.handleChange;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderView_General_Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ref\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 40\n    }\n  }, \"Reference #\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"ref\",\n    required: true,\n    value: referenceNumber || '',\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"ref\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 41\n    }\n  }, \"Date Placed\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"date\",\n    value: datePlaced || '',\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tracking\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 45\n    }\n  }, \"Tracking #\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"tracking\",\n    value: trackingNumber || '',\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"tracking\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 43\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"status\",\n    value: orderStatus || '',\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  })));\n};\nvar ExistingOrder = /*#__PURE__*/function (_Component) {\n  _inherits(ExistingOrder, _Component);\n  function ExistingOrder(props) {\n    var _this2;\n    _classCallCheck(this, ExistingOrder);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ExistingOrder).call(this, props));\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.deleteCurrOrder = _this2.deleteCurrOrder.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updateViewOnly = _this2.updateViewOnly.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.saveEdits = _this2.saveEdits.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.getShippingInfo = _this2.getShippingInfo.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.getCustomerData = _this2.getCustomerData.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.getInvoiceData = _this2.getInvoiceData.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.findOrderLinesByID = _this2.findOrderLinesByID.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.setProductsOrdered = _this2.setProductsOrdered.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      orderID: -1,\n      activeOrder: {\n        referenceNumber: \"\",\n        datePlaced: \"\",\n        orderStatus: \"\",\n        trackingNumber: \"\",\n        giftFor: \"\",\n        giftMessage: \"\",\n        isGift: 1,\n        customerId: \"\",\n        shippingId: \"\"\n      },\n      activeCustomer: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\"\n      },\n      activeAddress: {\n        streetAddressOne: \"\",\n        streetAddressTwo: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\"\n      },\n      activeInvoice: {\n        invoiceNumber: \"NA\",\n        revenue: \"\",\n        expense: \"\",\n        isPaid: \"\"\n      },\n      productsOrdered: [{\n        lineOrderID: \"\",\n        lineProductID: \"\",\n        qtyOrdered: 0\n        // name: \"\",\n        // description: \"\"\n      }],\n\n      numberOfLogs: 0,\n      numberOfFlavors: 0,\n      viewOnly: true\n    };\n    return _this2;\n  }\n  _createClass(ExistingOrder, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var target = e.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveProducts();\n      var _this$props$order = this.props.order,\n        orderID = _this$props$order.orderID,\n        referenceNumber = _this$props$order.referenceNumber,\n        datePlaced = _this$props$order.datePlaced,\n        orderStatus = _this$props$order.orderStatus,\n        trackingNumber = _this$props$order.trackingNumber,\n        giftFor = _this$props$order.giftFor,\n        giftMessage = _this$props$order.giftMessage,\n        isGift = _this$props$order.isGift,\n        customerId = _this$props$order.customerId,\n        shippingId = _this$props$order.shippingId;\n      this.setState({\n        orderID: parseInt(orderID),\n        activeOrder: {\n          referenceNumber: referenceNumber,\n          datePlaced: datePlaced,\n          orderStatus: orderStatus,\n          trackingNumber: trackingNumber,\n          giftFor: giftFor,\n          giftMessage: giftMessage,\n          isGift: isGift,\n          customerId: customerId,\n          shippingId: shippingId\n        }\n      });\n      this.getShippingInfo(shippingId);\n      this.getInvoiceData(orderID);\n    }\n  }, {\n    key: \"getShippingInfo\",\n    value: function getShippingInfo(id) {\n      var _this3 = this;\n      var customerId = this.state.activeOrder.customerId.customerId;\n      this.props.retrieveShippingAddress({\n        id: id\n      }).then(function (data) {\n        _this3.setState({\n          activeAddress: {\n            streetAddressOne: data.payload.streetAddressOne,\n            streetAddressTwo: data.payload.streetAddressTwo,\n            city: data.payload.city,\n            state: data.payload.state,\n            zip: data.payload.zip\n          }\n        });\n        console.log(data);\n        _this3.getCustomerData(customerId);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"getCustomerData\",\n    value: function getCustomerData(id) {\n      var _this4 = this;\n      var orderID = this.state.orderID;\n      this.props.retrieveCustomer({\n        id: id\n      }).then(function (data) {\n        console.log(data);\n        _this4.setState({\n          activeCustomer: {\n            firstName: data.payload.firstName,\n            lastName: data.payload.lastName,\n            email: data.payload.email,\n            phoneNumber: data.payload.phoneNumber\n          }\n        });\n        _this4.findOrderLinesByID(orderID);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"findOrderLinesByID\",\n    value: function findOrderLinesByID(id) {\n      var _this5 = this;\n      this.props.findOrderLineByOrderID({\n        id: id\n      }).then(function (data) {\n        console.log(data);\n        var i = 0;\n        var logs = 0;\n        var flavors = data.payload.length;\n        while (i < flavors) {\n          var newProduct = {\n            lineOrderID: data.payload[i].lineOrderID,\n            lineProductID: data.payload[i].lineProductID,\n            qtyOrdered: data.payload[i].qtyOrdered\n          };\n          var list = _this5.state.productsOrdered.slice();\n          _this5.setProductsOrdered([].concat(_toConsumableArray(list), [newProduct]));\n          logs += data.payload[i].qtyOrdered;\n          console.log(data.payload[i]);\n          i++;\n        }\n        _this5.setState({\n          numberOfLogs: logs,\n          numberOfFlavors: flavors\n        });\n        _this5.getInvoiceData(id);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"getInvoiceData\",\n    value: function getInvoiceData(id) {\n      var _this6 = this;\n      this.props.retrieveInvoice({\n        id: id\n      }).then(function (data) {\n        console.log(data);\n        _this6.setState({\n          activeInvoice: {\n            invoiceNumber: data.payload.invoiceNumber,\n            revenue: data.payload.revenue,\n            expense: data.payload.expense,\n            isPaid: data.payload.isPaid\n          }\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"setProductsOrdered\",\n    value: function setProductsOrdered(products) {\n      this.setState({\n        productsOrdered: products\n      });\n    }\n  }, {\n    key: \"updateViewOnly\",\n    value: function updateViewOnly() {\n      this.setState({\n        viewOnly: !this.state.viewOnly\n      });\n    }\n  }, {\n    key: \"saveEdits\",\n    value: function saveEdits() {\n      console.log(\"edit order\");\n      //updateORder\n    }\n  }, {\n    key: \"deleteCurrOrder\",\n    value: function deleteCurrOrder(id, event) {\n      var _this7 = this;\n      this.props.deleteOrder({\n        id: this.state.orderID\n      }).then(function () {\n        _this7.props.orderCardOnDelete(id, event);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      var _this$props = this.props,\n        order = _this$props.order,\n        activeTabId = _this$props.activeTabId;\n      var viewOnly = this.state.viewOnly;\n      var _this$state$activeOrd = this.state.activeOrder,\n        referenceNumber = _this$state$activeOrd.referenceNumber,\n        datePlaced = _this$state$activeOrd.datePlaced,\n        orderStatus = _this$state$activeOrd.orderStatus,\n        trackingNumber = _this$state$activeOrd.trackingNumber;\n      console.log(referenceNumber);\n      var address = this.state.activeOrder.address;\n      console.log(this.state);\n      if (viewOnly) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView_Header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.updateViewOnly,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: edit_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 7\n          }\n        }, \"Edit Order\")), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: function onClick(event) {\n            return _this8.deleteCurrOrder(activeTabId, event);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: delete_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 7\n          }\n        }, \"Delete Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(GeneralInfoView, {\n          referenceNumber: referenceNumber,\n          datePlaced: datePlaced,\n          trackingNumber: trackingNumber,\n          orderStatus: orderStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(CustomerInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(GiftInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ShippingInfo, {\n          shippingDetails: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(InvoiceInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ProductInfo, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 7\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"OrderView_Header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.saveEdits,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: edit_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 7\n          }\n        }, \"Save Order\")), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"OrderActionButton\",\n          onClick: this.updateViewOnly,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: delete_icon,\n          alt: \"add order\",\n          style: {\n            paddingRight: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 7\n          }\n        }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(GeneralInfoEdit, {\n          handleChange: this.handleInputChange,\n          referenceNumber: referenceNumber,\n          datePlaced: datePlaced,\n          trackingNumber: trackingNumber,\n          orderStatus: orderStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 7\n          }\n        }))));\n      }\n    }\n  }]);\n  return ExistingOrder;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    shippingAddresses: state.shippingAddresses,\n    customers: state.customers\n  };\n};\nexport default connect(mapStateToProps, {\n  retrieveCustomer: retrieveCustomer,\n  deleteOrder: deleteOrder,\n  retrieveOrder: retrieveOrder,\n  updateOrder: updateOrder,\n  retrieveShippingAddress: retrieveShippingAddress,\n  retrieveProducts: retrieveProducts,\n  findBySKU: findBySKU,\n  findOrderLineByOrderID: findOrderLineByOrderID,\n  retrieveInvoice: retrieveInvoice\n})(ExistingOrder);","map":{"version":3,"names":["React","useState","Component","connect","useDispatch","useSelector","updateOrder","deleteOrder","retrieveOrder","retrieveShippingAddress","retrieveCustomer","retrieveInvoice","findOrderLineByOrderID","findBySKU","retrieveProducts","CustomerInfo","InvoiceInfo","GiftInfo","GeneralInfo","ProductInfo","OrderViewOnly","order","viewOnly","console","log","viewType","ShippingInfo","streetAddressOne","streetAddressTwo","city","state","zip","fontWeight","GeneralInfoView","referenceNumber","datePlaced","trackingNumber","orderStatus","GeneralInfoEdit","handleChange","e","ExistingOrder","props","handleInputChange","bind","deleteCurrOrder","updateViewOnly","saveEdits","getShippingInfo","getCustomerData","getInvoiceData","findOrderLinesByID","setProductsOrdered","orderID","activeOrder","giftFor","giftMessage","isGift","customerId","shippingId","activeCustomer","firstName","lastName","email","phoneNumber","activeAddress","activeInvoice","invoiceNumber","revenue","expense","isPaid","productsOrdered","lineOrderID","lineProductID","qtyOrdered","numberOfLogs","numberOfFlavors","target","value","type","checked","name","setState","parseInt","id","then","data","payload","catch","i","logs","flavors","length","newProduct","list","slice","products","event","orderCardOnDelete","activeTabId","address","edit_icon","paddingRight","delete_icon","mapStateToProps","shippingAddresses","customers"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js"],"sourcesContent":["import edit_icon from '../../assets/img/edit_white.svg'\nimport delete_icon from '../../assets/img/trash_white.svg'\nimport React, { useState, Component } from 'react'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice'\nimport {retrieveShippingAddress} from '../../store/address_slice'\nimport { retrieveCustomer } from '../../store/customer_slice';\nimport { retrieveInvoice } from '../../store/invoice_slice';\nimport { findOrderLineByOrderID } from \"../../store/orderline_slice\";\nimport { findBySKU, retrieveProducts } from \"../../store/product_slice\";\n\nimport CustomerInfo from './orderview_components/CustomerDetails';\nimport InvoiceInfo from './orderview_components/InvoiceDetails';\nimport GiftInfo from './orderview_components/GiftDetails';\nimport GeneralInfo from './orderview_components/GeneralDetails';\n// import ShippingInfo from './orderview_components/ShippingDetails';\nimport ProductInfo from './orderview_components/ProductDetails';\n\n\n// const useOrderForm = (order) => {\n\n// \tconst dispatch = useDispatch();\n// \t  const [inputs, setInputs] = useState(order)\n// \t  /* const [newOrder, setOrder] = useState(order) */\n  \n// \tconst ordersAmount = useSelector((state) => state.orders.length);\n  \n  \n// \t  const handleSubmit = (event) => {\n// \t\t  if(event) {\n// \t\t\t  event.preventDefault()\n// \t\t\t  dispatch(\n// \t\t);\n// \t\t  }\n// \t  }\n// \t  const handleInputChange = (event) => {\n// \t\t  event.persist()\n// \t\t  setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t  }\n// \t  return {\n// \t\t  handleSubmit,\n// \t\t  handleInputChange,\n// \t\t  inputs\n// \t  };\n//   }\n\n//  const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n\n/**\n * This is the view of a singular order. \n * @param order \n * @returns This returns the view of a singular existing order \n */\n const OrderViewOnly = ({order, viewOnly}) => {\n\t\n\tconsole.log(order)\n\n\tconst viewType = \"READ_ONLY\" || \"CAN_EDIT\";\n\t// let recipient\n\t// if(order.isGift){\n\t// \trecipient = order.giftFor\n\n\t// } else{\n\t// \t// recipient = order.customer.firstName + ' ' + order.customer.lastName \n\t// }\n\n\t// var numberOfFlavors = 0\n\t// order.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n\t// var numberOfLogs = 0\n\t// order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\t\n\t\n}\n\nconst ShippingInfo = ({streetAddressOne, streetAddressTwo, city, state, zip}) => {\n\treturn (\n\t\t<div id='OrderView_Shipping_Details'>\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address</h4></td>\n\t\t\t\t<td>\n\t\t\t\t\t<h4>{streetAddressOne}\n\t\t\t\t\t<br></br> {streetAddressTwo}\n\t\t\t\t\t<br></br> {city}, {state}<br></br>{zip}\n\t\t\t\t\t</h4>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t{/* <tr>\n\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n\t\t\t\t<td><h4>{order.shipmentTrackingNumber}</h4></td>\n\t\t\t</tr> */}\n\t\t\t{/* <tr>\n\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4>{order.giftMessage}</h4></td>}\n\t\t\t</tr> */}\n\t\t</table>\n\t</div>\n\t)\n}\n\nconst GeneralInfoView = ({referenceNumber, datePlaced, trackingNumber, orderStatus}) => {\n\tconsole.log(referenceNumber)\n\treturn (\n\t\t<div id='OrderView_General_Details'>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n\t\t\t\t\t<td><h4>{referenceNumber}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n\t\t\t\t\t<td><h4>{datePlaced}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n\t\t\t\t\t<td><h4>{trackingNumber}</h4></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Status</h4></td>\n\t\t\t\t\t<td><h4>{orderStatus}</h4></td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t);\t\n}\n\n\nconst GeneralInfoEdit = ({referenceNumber, datePlaced, trackingNumber, orderStatus, handleChange}) => {\n\n\treturn(\n            <div id='OrderView_General_Details'>\n                <div className=\"form-group\">\n                  <label htmlFor=\"ref\"><h4 style={{fontWeight: 'bold'}}>Reference #</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"ref\"\n                    required\n                    value={referenceNumber || ''}\n                    onChange={(e) => handleChange(e)}\n                    name=\"ref\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"date\"><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"date\"\n                    value={datePlaced || ''}\n                    onChange={(e) => handleChange(e)}\n                    name=\"date\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"tracking\"><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"tracking\"\n                    value={trackingNumber || ''}\n                    onChange={(e) => handleChange(e)}\n                    name=\"tracking\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"status\"><h4 style={{fontWeight: 'bold'}}>Status</h4></label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"status\"\n                    value={orderStatus || ''}\n                    onChange={(e) => handleChange(e)}\n                    name=\"status\"\n                  />\n                </div>\n            </div>\n        \n\t)\n}\n\nclass ExistingOrder extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t\tthis.handleInputChange = this.handleInputChange.bind(this)\n\n\t\tthis.deleteCurrOrder = this.deleteCurrOrder.bind(this)\n\t\tthis.updateViewOnly = this.updateViewOnly.bind(this)\n\t\tthis.saveEdits = this.saveEdits.bind(this)\n\t\t\n\t\tthis.getShippingInfo = this.getShippingInfo.bind(this);\n\t\tthis.getCustomerData = this.getCustomerData.bind(this);\n\t\tthis.getInvoiceData = this.getInvoiceData.bind(this);\n\n\t\tthis.findOrderLinesByID = this.findOrderLinesByID.bind(this);\n\t\tthis.setProductsOrdered = this.setProductsOrdered.bind(this);\n\n\n\t  this.state = {\n\t\torderID: -1,\n\t\tactiveOrder: {\n\t\t\treferenceNumber: \"\",\n\t\t\tdatePlaced: \"\",\n\t\t\torderStatus: \"\",\n\t\t\ttrackingNumber: \"\",\n\t\t\tgiftFor: \"\",\n\t\t\tgiftMessage: \"\",\n\t\t\tisGift: 1,\n\t\t\tcustomerId: \"\",\n\t\t\tshippingId: \"\",\n\n\t\t},\n\t\tactiveCustomer: {\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\temail: \"\",\n\t\t\tphoneNumber: \"\",\n\t\t},\n\t\tactiveAddress: {\n\t\t\tstreetAddressOne: \"\",\n\t\t\tstreetAddressTwo: \"\",\n\t\t\tcity: \"\",\n\t\t\tstate: \"\",\n\t\t\tzip: \"\"\n\t\t},\n\t\tactiveInvoice: {\n\t\t\tinvoiceNumber: \"NA\",\n\t\t\trevenue: \"\",\n\t\t\texpense: \"\",\n\t\t\tisPaid: \"\",\n\t\t},\n\t\tproductsOrdered: [\n\t\t\t{\n\t\t\t\tlineOrderID: \"\",\n\t\t\t\tlineProductID: \"\",\n\t\t\t\tqtyOrdered: 0,\n\t\t\t\t// name: \"\",\n\t\t\t\t// description: \"\"\n\t\t\t}, \n\t\t],\n\t\tnumberOfLogs: 0,\n\t\tnumberOfFlavors: 0,\n\t\tviewOnly: true,\n\t  }\n\t}\n\n    handleInputChange(e) {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n        [name]: value\n        });\n    }\n\n\tcomponentDidMount() {\n        this.props.retrieveProducts();\n\t\tconst {orderID, referenceNumber, datePlaced, orderStatus, trackingNumber, giftFor, giftMessage, isGift, customerId, shippingId} = this.props.order\n\t\tthis.setState({\n\t\t\torderID: parseInt(orderID),\n\t\t\tactiveOrder: {\n\t\t\t\treferenceNumber: referenceNumber,\n\t\t\t\tdatePlaced: datePlaced,\n\t\t\t\torderStatus: orderStatus,\n\t\t\t\ttrackingNumber: trackingNumber,\n\t\t\t\tgiftFor: giftFor,\n\t\t\t\tgiftMessage: giftMessage,\n\t\t\t\tisGift: isGift,\n\t\t\t\tcustomerId: customerId,\n\t\t\t\tshippingId: shippingId,\n\t\t\t}\n\t\t})\n\t\tthis.getShippingInfo(shippingId);\n\t\tthis.getInvoiceData(orderID);\n\n\n\t}\n\n\tgetShippingInfo(id) {\n\t\tconst {customerId} = this.state.activeOrder.customerId\n        this.props\n\t\t\t.retrieveShippingAddress({id})\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tactiveAddress: {\n\t\t\t\t\t\tstreetAddressOne: data.payload.streetAddressOne,\n\t\t\t\t\t\tstreetAddressTwo: data.payload.streetAddressTwo,\n\t\t\t\t\t\tcity: data.payload.city,\n\t\t\t\t\t\tstate: data.payload.state,\n\t\t\t\t\t\tzip: data.payload.zip,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.getCustomerData(customerId);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n\tgetCustomerData(id) {\n\t\tconst {orderID} = this.state\n\n\t\tthis.props\n\t\t\t.retrieveCustomer({id})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState({\n                    activeCustomer: {\n\t\t\t\t\t\tfirstName: data.payload.firstName,\n\t\t\t\t\t\tlastName: data.payload.lastName,\n\t\t\t\t\t\temail: data.payload.email,\n\t\t\t\t\t\tphoneNumber: data.payload.phoneNumber,\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t\tthis.findOrderLinesByID(orderID);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n\tfindOrderLinesByID(id) {\n\t\tthis.props\n\t\t\t.findOrderLineByOrderID({ id })\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\n\t\t\t\tlet i = 0;\n\t\t\t\tlet logs = 0;\n                let flavors = data.payload.length;\n\t\t\t\twhile (i < flavors) {\n                    const newProduct = {\n                        lineOrderID: data.payload[i].lineOrderID,\n                        lineProductID: data.payload[i].lineProductID,\n                        qtyOrdered: data.payload[i].qtyOrdered,\n                    }\n\n                    const list = this.state.productsOrdered.slice()\n                    this.setProductsOrdered([...list, newProduct])\t\t\n\n                    logs+= data.payload[i].qtyOrdered;\n\t\t\t\t\tconsole.log(data.payload[i]);\n\t\t\t\t\ti++;\n\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tnumberOfLogs: logs,\n                    numberOfFlavors: flavors\n\t\t\t\t});\n\n\t\t\t\tthis.getInvoiceData(id);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n\n\tgetInvoiceData(id) {\n\t\tthis.props\n\t\t\t.retrieveInvoice({id})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tactiveInvoice: {\n\t\t\t\t\t\tinvoiceNumber: data.payload.invoiceNumber,\n\t\t\t\t\t\trevenue: data.payload.revenue,\n\t\t\t\t\t\texpense: data.payload.expense,\n\t\t\t\t\t\tisPaid: data.payload.isPaid,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n\n    setProductsOrdered(products) {\n\t\tthis.setState({\n\t\t\tproductsOrdered: products\n\t\t});\n\t}\n\n\n\tupdateViewOnly() {\n\t\tthis.setState({\n\t\t\tviewOnly: !this.state.viewOnly\n\t\t})\n\t}\n\n\tsaveEdits() {\n\t\tconsole.log(\"edit order\")\n\t\t//updateORder\n\t}\n\n\tdeleteCurrOrder(id, event) {\n\t\tthis.props\n\t\t\t.deleteOrder({id: (this.state.orderID)}) \n\t\t\t.then(() => {\n\t\t\t\tthis.props.orderCardOnDelete(id, event)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t}\n  \n\trender() {\n\n\t\tconst {order, activeTabId} = this.props;\n\t\tconst {viewOnly} = this.state;\n\n\t\tconst {referenceNumber, datePlaced, orderStatus, trackingNumber} = this.state.activeOrder;\n\t\tconsole.log(referenceNumber)\n\n\n\t\tconst {address} = this.state.activeOrder\n\t\tconsole.log(this.state)\n\n\t\tif (viewOnly) {\n\t\t\treturn (\n\t\t\t\t<div id='OrderView'>\n\t\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t\t<button className='OrderActionButton' onClick={ this.updateViewOnly}>\n\t\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Edit Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t\t<button className='OrderActionButton' onClick={(event) => this.deleteCurrOrder(activeTabId, event)}>\n\t\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Delete Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='Row'>\n\t\t\t\t\t<div className='Column'>\t\t\n\t\t\t\t\t\t<GeneralInfoView referenceNumber={referenceNumber} datePlaced= {datePlaced} trackingNumber={trackingNumber} orderStatus={orderStatus}/>\n\t\t\t\t\t\t<CustomerInfo order={order}/>\n\t\t\t\t\t\t<GiftInfo order={order}/>\n\t\t\t\t\t\t<ShippingInfo shippingDetails={address}/>\n\t\t\t\t\t\t<InvoiceInfo order={order}/>\n\t\t\t\t\t\t<ProductInfo order={order}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div id='OrderView'>\n\t\t\t\t\t<div id='OrderView_Header'>\n\t\t\t\t\t{/* on click EDIT, we change to edit view */}\n\t\t\t\t\t<button className='OrderActionButton' onClick={this.saveEdits}>\n\t\t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Save Order</h4>\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n\t\t\t\t\t<button className='OrderActionButton' onClick={(this.updateViewOnly)}>\n\t\t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n\t\t\t\t\t\t<h4>Cancel</h4>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='Row'>\n\t\t\t\t\t<div className='Column'>\t\t\n\t\t\t\t\t\t<GeneralInfoEdit handleChange={this.handleInputChange} referenceNumber={referenceNumber} datePlaced= {datePlaced} trackingNumber={trackingNumber} orderStatus={orderStatus}/>\n\t\t\t\t\t\t{/* <CustomerInfoEdit order={order}/>\n\t\t\t\t\t\t<GiftInfoEdit order={order}/>\n\t\t\t\t\t\t<ShippingInfoEdit order={order}/>\n\t\t\t\t\t\t<InvoiceInfoEdit order={order}/>\n\t\t\t\t\t\t<ProductInfoEdit order={order}/> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n  }\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\n\treturn {\n        shippingAddresses: state.shippingAddresses,\n\t\tcustomers: state.customers,\n\n\n\t};\n  };\n  \nexport default connect(mapStateToProps, { retrieveCustomer, deleteOrder, retrieveOrder, updateOrder, retrieveShippingAddress, retrieveProducts, findBySKU, findOrderLineByOrderID, retrieveInvoice })(ExistingOrder);\n\n"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE/D,SAASC,WAAW,EAAEC,WAAW,EAAEC,aAAa,QAAQ,yBAAyB;AACjF,SAAQC,uBAAuB,QAAO,2BAA2B;AACjE,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,2BAA2B;AAEvE,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,WAAW,MAAM,uCAAuC;AAC/D;AACA,OAAOC,WAAW,MAAM,uCAAuC;;AAG/D;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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"},"metadata":{},"sourceType":"module"}