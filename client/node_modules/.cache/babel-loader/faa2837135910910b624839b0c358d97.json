{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js\";\nimport edit_icon from \"../../assets/img/edit_white.svg\";\nimport delete_icon from \"../../assets/img/trash_white.svg\";\nimport React, { useState, Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice';\nimport { retrieveCustomer } from '../../store/customer_slice';\nimport { retrieveInvoice } from '../../store/invoice_slice';\nimport { retrieveShippingAddress } from '../../store/address_slice';\nimport { retrieveOrderLines } from '../../store/orderline_slice';\n\n// const useOrderForm = (order, orderFunction) => {\n// \tconst [inputs, setInputs] = useState(order)\n// \t/* const [newOrder, setOrder] = useState(order) */\n\n// \tconst handleSubmit = (event) => {\n// \t\tif(event) {\n// \t\t\tevent.preventDefault()\n// \t\t\torderFunction(inputs)\n// \t\t}\n// \t}\n// \tconst handleInputChange = (event) => {\n// \t\tevent.persist()\n// \t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t}\n// \treturn {\n// \t\thandleSubmit,\n// \t\thandleInputChange,\n// \t\tinputs\n// \t};\n// }\n\n// export const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n// // this will be used to dispatch actions\n// // import { useSelector, useDispatch } from 'react-redux';\n\n// /**\n//  * This is the view of a singular order. It takes in the functions for the button clicks.\n//  * Should have EDIT and DELETE button. This is only for existing orders (those that have been saved) \n//  * @param {Order,function,function} order updateOrder deleteOrder\n//  * @returns This returns the view of a singular existing order \n//  */\n// // export const OrderViewOnly = ({order, updateOrder, deleteOrder}) => {\n// export const OrderViewOnly = ({order, readOnlyButton}) => {\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<div id='OrderView'>\n// \t\t\t<div id='OrderView_Header'>\n// \t\t\t\t{/* on click EDIT, we change to edit view */}\n// \t\t\t\t<button className='OrderActionButton' onClick={()=> readOnlyButton(prevState => !prevState)}>\n// \t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n// \t\t\t\t\t<h4>Edit Order</h4>\n// \t\t\t\t</button>\n// \t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n// \t\t\t\t<button className='OrderActionButton' onClick={deleteOrder}>\n// \t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n// \t\t\t\t\t<h4>Delete Order</h4>\n// \t\t\t\t</button>\n// \t\t\t</div>\n// \t\t\t<div className='Row'>\n// \t\t\t\t<div className='Column'>\n// \t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.referenceNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.invoiceNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.datePlaced}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Name</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.firstName} {order.customer.lastName}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.email}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.phoneNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{recipient}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Address</h4></td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<h4>{order.shippingAddress.streetAddress}<br></br>{order.shippingAddress.city}, {order.shippingAddress.state}<br></br>{order.shippingAddress.zipCode}</h4>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{order.shipmentTrackingNumber}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4>{order.giftMessage}</h4></td>}\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t</table>\n// \t\t\t\t</div>\n// \t\t\t</div>\n\n// \t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</table>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t</table>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t)\n// }\nvar ExistingOrder = /*#__PURE__*/function (_Component) {\n  _inherits(ExistingOrder, _Component);\n  function ExistingOrder(props) {\n    _classCallCheck(this, ExistingOrder);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExistingOrder).call(this, props));\n  }\n\n  // This gets the users when the component loads\n  _createClass(ExistingOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //   this.props.retrieveOrder();\n      //   this.props.retrieveCustomer();\n      //   this.props.retrieveInvoices();\n      //   this.props.retrieveOrderLines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const [isReadonly, setIsReadonly] = useState(true);\n\n      // if (isReadonly) {\n      // \treturn (\n      // \t\t<OrderViewOnly order={order} readOnlyButton={setIsReadonly}/>\n      // \t)\n      // } else {\n      // \treturn (\n      // \t\t<OrderEditView order={order} orderFunction={updateOrder}/>\n      // \t)\n      // }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 6\n        }\n      }, \"existing order\");\n    }\n  }]);\n  return ExistingOrder;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.orders,\n    customers: state.customers,\n    orderline: state.orderline,\n    invoices: state.invoices,\n    shippingAddresses: state.shippingAddresses\n  };\n};\nexport default connect(mapStateToProps, {\n  retrieveOrder: retrieveOrder,\n  retrieveCustomer: retrieveCustomer,\n  retrieveOrderLines: retrieveOrderLines,\n  retrieveInvoice: retrieveInvoice\n})(ExistingOrder);","map":{"version":3,"names":["React","useState","Component","connect","updateOrder","deleteOrder","retrieveOrder","retrieveCustomer","retrieveInvoice","retrieveShippingAddress","retrieveOrderLines","ExistingOrder","props","mapStateToProps","state","orders","customers","orderline","invoices","shippingAddresses"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_ExistingOrder.js"],"sourcesContent":["import edit_icon from '../../assets/img/edit_white.svg'\nimport delete_icon from '../../assets/img/trash_white.svg'\nimport React, { useState, Component } from 'react'\nimport { connect } from \"react-redux\";\n\nimport { updateOrder, deleteOrder, retrieveOrder } from '../../store/order_slice'\nimport { retrieveCustomer } from '../../store/customer_slice'\nimport { retrieveInvoice }\tfrom '../../store/invoice_slice'\nimport { retrieveShippingAddress } from '../../store/address_slice';\nimport { retrieveOrderLines } from '../../store/orderline_slice'\n\n// const useOrderForm = (order, orderFunction) => {\n// \tconst [inputs, setInputs] = useState(order)\n// \t/* const [newOrder, setOrder] = useState(order) */\n\n// \tconst handleSubmit = (event) => {\n// \t\tif(event) {\n// \t\t\tevent.preventDefault()\n// \t\t\torderFunction(inputs)\n// \t\t}\n// \t}\n// \tconst handleInputChange = (event) => {\n// \t\tevent.persist()\n// \t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n// \t}\n// \treturn {\n// \t\thandleSubmit,\n// \t\thandleInputChange,\n// \t\tinputs\n// \t};\n// }\n\n// export const OrderEditView = ({order, orderFunction}) => {\n\n// \t// orderFunction do i need to import a function?\n// \tconst {inputs, handleInputChange, handleSubmit} = useOrderForm(order, orderFunction)\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors++)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<form onSubmit={handleSubmit}>\n// \t\t\t<div id='OrderView'>\n// \t\t\t\t<div id='OrderView_Header'>\n// \t\t\t\t\t<button type=\"submit\">Save</button>\n// \t\t\t\t\t<button>Cancel</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<div className='Column'>\n// \t\t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"referenceNumber\" onChange={handleInputChange} value={inputs.referenceNumber} defaultValue={order.referenceNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"invoiceNumber\" onChange={handleInputChange} value={inputs.invoiceNumber} defaultValue={order.invoiceNumber}/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"datePlaced\" onChange={handleInputChange} value={inputs.datePlaced} defaultValue={order.datePlaced} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>First Name<br></br>Last Name</h4></td>\n// \t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"customer.firstName\" onChange={handleInputChange} value={inputs.customer.firstName} defaultValue={order.customer.firstName} required/><br></br>\n// \t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.customer.lastName} defaultValue={order.customer.lastName} required/>\n// \t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.customer.email} defaultValue={order.customer.email} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"phoneNumber\"onChange={handleInputChange}  value={inputs.customer.phoneNumber} defaultValue={order.customer.phoneNumber} required/></td>\n// \t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"text\" name=\"giftFor\" onChange={handleInputChange} value={inputs.giftFor} defaultValue={recipient} required/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><h4>{recipient}</h4></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Street Address<br></br>City<br></br>State<br></br>Zipcode</h4></td>\n// \t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"streetAddress\" onChange={handleInputChange} value={inputs.shippingAddress.streetAddress} defaultValue={order.shippingAddress.streetAddress} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" onChange={handleInputChange} value={inputs.shippingAddress.city} defaultValue={order.shippingAddress.city} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"state\" onChange={handleInputChange} value={inputs.shippingAddress.state} defaultValue={order.shippingAddress.state} required/><br></br>\n// \t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"zipcode\" onChange={handleInputChange} value={inputs.shippingAddress.zipCode} defaultValue={order.shippingAddress.zipCode} required/>\n// \t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t\t<input type=\"text\" name=\"shipmentTrackingNumber\" onChange={handleInputChange} value={inputs.shipmentTrackingNumber} defaultValue={order.shipmentTrackingNumber}/>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Is Gift?</h4></td>\n// \t\t\t\t\t\t\t\t{order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\" checked/></td>}\n// \t\t\t\t\t\t\t\t{!order.isGift && <td><input type=\"checkbox\" onChange={handleInputChange} value={inputs.isGift} name=\"isGift\"/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><input type=\"text\" name=\"giftMessage\" onChange={handleInputChange} value={inputs.giftMessage} defaultValue={order.giftMessage}/></td>}\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t\t<div className='Row'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n// // this will be used to dispatch actions\n// // import { useSelector, useDispatch } from 'react-redux';\n\n// /**\n//  * This is the view of a singular order. It takes in the functions for the button clicks.\n//  * Should have EDIT and DELETE button. This is only for existing orders (those that have been saved) \n//  * @param {Order,function,function} order updateOrder deleteOrder\n//  * @returns This returns the view of a singular existing order \n//  */\n// // export const OrderViewOnly = ({order, updateOrder, deleteOrder}) => {\n// export const OrderViewOnly = ({order, readOnlyButton}) => {\n// \tlet recipient\n// \tif(order.isGift){\n// \t\trecipient = order.giftFor\n\n// \t} else{\n// \t\trecipient = order.customer.firstName + ' ' + order.customer.lastName \n// \t}\n\n// \tvar numberOfFlavors = 0\n// \torder.productsOrdered.forEach(product => numberOfFlavors+=1)\n\n// \tvar numberOfLogs = 0\n// \torder.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\n// \treturn (\n// \t\t<div id='OrderView'>\n// \t\t\t<div id='OrderView_Header'>\n// \t\t\t\t{/* on click EDIT, we change to edit view */}\n// \t\t\t\t<button className='OrderActionButton' onClick={()=> readOnlyButton(prevState => !prevState)}>\n// \t\t\t\t\t<img src={edit_icon} alt='add order' style={{paddingRight: '10px'}}/>\n// \t\t\t\t\t<h4>Edit Order</h4>\n// \t\t\t\t</button>\n// \t\t\t\t{/* on click DELETE, we dispatch delete call with ID*/}\n// \t\t\t\t<button className='OrderActionButton' onClick={deleteOrder}>\n// \t\t\t\t\t<img src={delete_icon} alt='add order' style={{paddingRight: '10px'}}/>\n// \t\t\t\t\t<h4>Delete Order</h4>\n// \t\t\t\t</button>\n// \t\t\t</div>\n// \t\t\t<div className='Row'>\n// \t\t\t\t<div className='Column'>\n// \t\t\t\t\t<div id='OrderView_General_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Reference #</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.referenceNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Invoice #</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.invoiceNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Date Placed</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.datePlaced}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div id='OrderView_Customer_Details'>\n// \t\t\t\t\t\t<table>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Name</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.firstName} {order.customer.lastName}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Email</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.email}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Phone</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{order.customer.phoneNumber}</h4></td>\n// \t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t</table>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div id='OrderView_Shipping_Details'>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Recipient</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{recipient}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Address</h4></td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<h4>{order.shippingAddress.streetAddress}<br></br>{order.shippingAddress.city}, {order.shippingAddress.state}<br></br>{order.shippingAddress.zipCode}</h4>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Tracking #</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{order.shipmentTrackingNumber}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4 style={{fontWeight: 'bold'}}>Gift Message</h4></td>}\n// \t\t\t\t\t\t\t{order.isGift && order.giftMessage !== '' && <td><h4>{order.giftMessage}</h4></td>}\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t</table>\n// \t\t\t\t</div>\n// \t\t\t</div>\n\n// \t\t\t<div id='OrderView_Products_Details'>\n// \t\t\t\t<h4 style={{fontWeight: 'bold'}}>Flavor Information</h4>\n// \t\t\t\t<div className='Row'>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Name</h4></th>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>SKU</h4></th>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>Quantity</h4></th>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t{order.productsOrdered.map((product) => (\n// \t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t<td><h4>{product.product.name}</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{product.product.id}</h4></td>\n// \t\t\t\t\t\t\t\t<td><h4>{product.quantity}</h4></td>\n// \t\t\t\t\t\t\t</tr>\t\t\t\t\t\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</table>\n// \t\t\t\t\t<table>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<th><h4 style={{fontWeight: 'bold'}}>At a Glance:</h4></th>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Logs:</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{numberOfLogs}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t<td><h4 style={{fontWeight: 'bold'}}>Total Number of Flavors:</h4></td>\n// \t\t\t\t\t\t\t<td><h4>{numberOfFlavors}</h4></td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t</table>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t)\n// }\n\nclass ExistingOrder extends Component {\n\tconstructor(props) {\n\t  super(props);\n      \n\t}\n  \n\t// This gets the users when the component loads\n\tcomponentDidMount() {\n\t//   this.props.retrieveOrder();\n\t//   this.props.retrieveCustomer();\n\t//   this.props.retrieveInvoices();\n\t//   this.props.retrieveOrderLines();\n\t}\n\n  \n\trender() {\n\t\t\t// const [isReadonly, setIsReadonly] = useState(true);\n\n\n\n\t\t// if (isReadonly) {\n\t\t// \treturn (\n\t\t// \t\t<OrderViewOnly order={order} readOnlyButton={setIsReadonly}/>\n\t\t// \t)\n\t\t// } else {\n\t\t// \treturn (\n\t\t// \t\t<OrderEditView order={order} orderFunction={updateOrder}/>\n\t\t// \t)\n\t\t// }\n\t\t\t\treturn(\n\t\t\t\t\t<div>existing order</div>\n\t\t\t\t);\n\n\t}\n  }\n  \n\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state) => {\n\treturn {\n\t  orders: state.orders,\n\t  customers: state.customers,\n\t  orderline: state.orderline,\n\t  invoices: state.invoices,\n\t  shippingAddresses: state.shippingAddresses,\n\n\t};\n  };\n  \nexport default connect(mapStateToProps, { retrieveOrder, retrieveCustomer, retrieveOrderLines, retrieveInvoice })(ExistingOrder);\n\n"],"mappings":";;;;;;;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AAErC,SAASC,WAAW,EAAEC,WAAW,EAAEC,aAAa,QAAQ,yBAAyB;AACjF,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,kBAAkB,QAAQ,6BAA6B;;AAEhaAAa;EAAA;EAClB,uBAAYC,KAAK,EAAE;IAAA;IAAA,kFACXA,KAAK;EAEb;;EAEA;EAAA;IAAA;IAAA,oCACoB;MACpB;MACA;MACA;MACA;IAAA;EACC;IAAA;IAAA,yBAGQ;MACP;;MAID;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACE,oBACC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAK,gBAAc,CAAM;IAG7B;EAAC;EAAA;AAAA,EAjC0BV,SAAS,GAqCnC;AACA,IAAMW,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAK;EACpC,OAAO;IACLC,MAAM,EAAED,KAAK,CAACC,MAAM;IACpBC,SAAS,EAAEF,KAAK,CAACE,SAAS;IAC1BC,SAAS,EAAEH,KAAK,CAACG,SAAS;IAC1BC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;IACxBC,iBAAiB,EAAEL,KAAK,CAACK;EAE3B,CAAC;AACA,CAAC;AAEH,eAAehB,OAAO,CAACU,eAAe,EAAE;EAAEP,aAAa,EAAbA,aAAa;EAAEC,gBAAgB,EAAhBA,gBAAgB;EAAEG,kBAAkB,EAAlBA,kBAAkB;EAAEF,eAAe,EAAfA;AAAgB,CAAC,CAAC,CAACG,aAAa,CAAC"},"metadata":{},"sourceType":"module"}