{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js\";\nimport React, { useState, Component } from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\nimport { retrieveCustomer } from \"../../../store/customer_slice\";\nimport { retrieveInvoice } from \"../../../store/invoice_slice\";\nimport { retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder } from \"../../../store/order_slice\";\nvar OrderCard = /*#__PURE__*/function (_Component) {\n  _inherits(OrderCard, _Component);\n  function OrderCard(props) {\n    _classCallCheck(this, OrderCard);\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderCard).call(this, props));\n  }\n\n  // This gets the users when the component loads\n  _createClass(OrderCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveOrder();\n      this.props.retrieveCustomer();\n      this.props.retrieveInvoice();\n      this.props.retrieveOrderLines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      // var tabData = {\n      // \torder: this.props,\n      // \tcustomer: \n      // }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCard\",\n        onClick: orderCardOnClick(order),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCardHeader\",\n        style: {\n          backgroundColor: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }\n      }, lastName, \", \", firstName), /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }\n      }, \"Placed: \", format(datePlaced, \"MM-dd-yy\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"OrderCardContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }\n      }, \"Reference: \", order.referenceNumber), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }\n      }, \"Invoice: \", order.invoiceNumber === undefined ? 'NA' : order.invoiceNumber), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }\n      }, \"Logs Ordered: \", numberOfLogs)));\n      // const {orders, customers, orderline, invoices} = this.props;\n\n      // const currentActiveOrders = orders.filter(order => (order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped'));\n      // // customer={customers.filter(customer => customer.customerID === order.customerId)[0]}\n      // var numberOfLogs = 0;\n      // // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n      // var firstName = '', lastName = '';\n      // if (customer !== undefined) {\n      // \tconsole.log(customer);\n      // \tconsole.log(customer.firstName + ', ' + customer.lastName);\n      // \tfirstName += customer.firstName;\n      // \tlastName += customer.lastName;\n      // \tconsole.log(firstName);\n      // }\n      // var datePlaced = new Date(order.datePlaced);\n\n      // console.log(this.props)\n    }\n  }]);\n  return OrderCard;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var order = ownProps.order.order;\n  return {\n    orders: state.orders,\n    customers: state.customers,\n    orderline: state.orderline,\n    invoices: state.invoices\n  };\n};\nexport default connect(mapStateToProps, {\n  retrieveOrder: retrieveOrder,\n  retrieveCustomer: retrieveCustomer,\n  retrieveOrderLines: retrieveOrderLines,\n  retrieveInvoice: retrieveInvoice\n})(OrderCard);","map":{"version":3,"names":["React","useState","Component","format","connect","retrieveCustomer","retrieveInvoice","retrieveOrderLines","retrieveOrder","OrderCard","props","console","log","orderCardOnClick","order","backgroundColor","color","fontWeight","lastName","firstName","float","datePlaced","referenceNumber","invoiceNumber","undefined","numberOfLogs","mapStateToProps","state","ownProps","orders","customers","orderline","invoices"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/orderview_components/OrderCard.js"],"sourcesContent":["import React, {useState, Component} from \"react\";\nimport { format } from \"date-fns\";\nimport { connect } from \"react-redux\";\n\n\nimport { retrieveCustomer } from \"../../../store/customer_slice\";\nimport { retrieveInvoice } from \"../../../store/invoice_slice\";\nimport { retrieveOrderLines } from \"../../../store/orderline_slice\";\nimport { retrieveOrder } from \"../../../store/order_slice\";\n\n\nclass OrderCard extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t}\n  \n\t// This gets the users when the component loads\n\tcomponentDidMount() {\n\t  this.props.retrieveOrder();\n\t  this.props.retrieveCustomer();\n\t  this.props.retrieveInvoice();\n\t  this.props.retrieveOrderLines();\n\t}\n  \n\trender() {\n\t\tconsole.log(this.props);\n\t\t// var tabData = {\n\t\t// \torder: this.props,\n\t\t// \tcustomer: \n\t\t// }\n\t\treturn (\n\t\t\t<div className='OrderCard' onClick={orderCardOnClick(order)}>\n\t\t\t\t<div className='OrderCardHeader' style={{ backgroundColor: color }}>\n\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>{lastName}, {firstName}</h4>\n\t\t\t\t\t<h4 style={{float: 'right'}}>Placed: {format(datePlaced, \"MM-dd-yy\")}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className='OrderCardContent'>\n\t\t\t\t\t<h4>Reference: {order.referenceNumber}</h4>\n\t\t\t\t\t<h4>Invoice: {(order.invoiceNumber === undefined) ? 'NA' : order.invoiceNumber}</h4>\n\t\t\t\t\t<h4>Logs Ordered: {numberOfLogs}</h4>\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t);\n\t\t\t\t// const {orders, customers, orderline, invoices} = this.props;\n\t\t\n\t\t// const currentActiveOrders = orders.filter(order => (order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped'));\n\t\t// // customer={customers.filter(customer => customer.customerID === order.customerId)[0]}\n\t\t// var numberOfLogs = 0;\n\t\t// // order.productsOrdered.forEach(product => numberOfLogs+= product.quantity)\n\t\t// var firstName = '', lastName = '';\n\t\t// if (customer !== undefined) {\n\t\t// \tconsole.log(customer);\n\t\t// \tconsole.log(customer.firstName + ', ' + customer.lastName);\n\t\t// \tfirstName += customer.firstName;\n\t\t// \tlastName += customer.lastName;\n\t\t// \tconsole.log(firstName);\n\t\t// }\n\t\t// var datePlaced = new Date(order.datePlaced);\n\n\n\t\t// console.log(this.props)\n\t\n\n\t}\n  }\n  \n\n  // Mapping only the parts of the redux store that we want to work with on this component\n  const mapStateToProps = (state, ownProps) => {\n\tconst {order} = ownProps.order;\n\treturn {\n\t  orders: state.orders,\n\t  customers: state.customers,\n\t  orderline: state.orderline,\n\t  invoices: state.invoices,\n\t};\n  };\n  \nexport default connect(mapStateToProps, {  retrieveOrder, retrieveCustomer, retrieveOrderLines, retrieveInvoice })(OrderCard);"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,OAAO,QAAQ,aAAa;AAGrC,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,aAAa,QAAQ,4BAA4B;AAAC,IAGrDC,SAAS;EAAA;EACd,mBAAYC,KAAK,EAAE;IAAA;IAAA,8EACXA,KAAK;EACb;;EAEA;EAAA;IAAA;IAAA,oCACoB;MAClB,IAAI,CAACA,KAAK,CAACF,aAAa,EAAE;MAC1B,IAAI,CAACE,KAAK,CAACL,gBAAgB,EAAE;MAC7B,IAAI,CAACK,KAAK,CAACJ,eAAe,EAAE;MAC5B,IAAI,CAACI,KAAK,CAACH,kBAAkB,EAAE;IACjC;EAAC;IAAA;IAAA,yBAEQ;MACRI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC;MACvB;MACA;MACA;MACA;MACA,oBACC;QAAK,SAAS,EAAC,WAAW;QAAC,OAAO,EAAEG,gBAAgB,CAACC,KAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC3D;QAAK,SAAS,EAAC,iBAAiB;QAAC,KAAK,EAAE;UAAEC,eAAe,EAAEC;QAAM,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClE;QAAI,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEC,QAAQ,EAAC,IAAE,EAACC,SAAS,CAAM,eAC/D;QAAI,KAAK,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,UAAQ,EAACjB,MAAM,CAACkB,UAAU,EAAE,UAAU,CAAC,CAAM,CACrE,eACN;QAAK,SAAS,EAAC,kBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,aAAW,EAACP,KAAK,CAACQ,eAAe,CAAM,eAC3C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,WAAS,EAAER,KAAK,CAACS,aAAa,KAAKC,SAAS,GAAI,IAAI,GAAGV,KAAK,CAACS,aAAa,CAAM,eACpF;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,gBAAc,EAACE,YAAY,CAAM,CAChC,CACD;MAEL;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAGA;IAGD;EAAC;EAAA;AAAA,EApDsBvB,SAAS,GAwD/B;AACA,IAAMwB,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAEC,QAAQ,EAAK;EAAA,IACvCd,KAAK,GAAIc,QAAQ,CAACd,KAAK,CAAvBA,KAAK;EACZ,OAAO;IACLe,MAAM,EAAEF,KAAK,CAACE,MAAM;IACpBC,SAAS,EAAEH,KAAK,CAACG,SAAS;IAC1BC,SAAS,EAAEJ,KAAK,CAACI,SAAS;IAC1BC,QAAQ,EAAEL,KAAK,CAACK;EAClB,CAAC;AACA,CAAC;AAEH,eAAe5B,OAAO,CAACsB,eAAe,EAAE;EAAGlB,aAAa,EAAbA,aAAa;EAAEH,gBAAgB,EAAhBA,gBAAgB;EAAEE,kBAAkB,EAAlBA,kBAAkB;EAAED,eAAe,EAAfA;AAAgB,CAAC,CAAC,CAACG,SAAS,CAAC"},"metadata":{},"sourceType":"module"}