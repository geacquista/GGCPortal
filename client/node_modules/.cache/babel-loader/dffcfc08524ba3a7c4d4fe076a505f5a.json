{"ast":null,"code":"import _slicedToArray from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/App.js\";\nimport React, { useState } from 'react';\nimport NavBar from './views/nav/Navbar';\nimport './App.css';\nimport Dashboard from './views/dashboard/Dashboard';\nimport OrderList from './views/orders/OrdersList';\nimport Search from './views/search/Search';\nimport LoginPage from './views/aa_login/LoginPage';\nimport Invoices from './views/invoices/Invoices';\nimport AdminPanel from './views/admin/AdminPanel';\n\n// For Navigation\nexport var ViewIndex = {\n  DASHBOARD: 1,\n  ORDERS: 2,\n  INVOICES: 3,\n  SEARCH: 4,\n  HELP: 5,\n  LOGOUT: 6,\n  TEST: 7\n};\n\n// Will this be controlled by the state?\n// const UserStatus = {\n// \tLOGGED_IN: 1,\n// \tLOGGED_OUT: 2,\n// }\n\nfunction App() {\n  /*\n  function App\n  // get quick stats data\n  */\n  // get the initial state of the orders \n  // const [orders, setOrders] = orderSlice.orders\n  var _useState = useState(ViewIndex.DASHBOARD),\n    _useState2 = _slicedToArray(_useState, 2),\n    displayContent = _useState2[0],\n    setDisplayContent = _useState2[1]; // get status of user\n  /**\n   * USER STATUS??\n   */\n  //const [userStatus, setUserStatus] = useState(UserStatus.GGC)\n  // depending on user status, will depend which class to run (App will be login?)\n  //\t{/* if userStatus is ggc show this */}\n  // keep viewIndex so NavBar is set with a flag that specifies the specific views allowed to be show\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    activeButton: displayContent,\n    buttonOnClick: setDisplayContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), displayContent === ViewIndex.DASHBOARD && /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 56\n    }\n  }), displayContent === ViewIndex.ORDERS && /*#__PURE__*/React.createElement(OrderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 53\n    }\n  }), displayContent === ViewIndex.INVOICES && /*#__PURE__*/React.createElement(Invoices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 55\n    }\n  }), displayContent === ViewIndex.SEARCH && /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 53\n    }\n  }), displayContent === ViewIndex.TEST && /*#__PURE__*/React.createElement(AdminPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 51\n    }\n  }), displayContent === ViewIndex.HELP && /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }\n  }), displayContent === ViewIndex.LOGOUT && /*#__PURE__*/React.createElement(LoginPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 53\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","NavBar","Dashboard","OrderList","Search","LoginPage","Invoices","AdminPanel","ViewIndex","DASHBOARD","ORDERS","INVOICES","SEARCH","HELP","LOGOUT","TEST","App","displayContent","setDisplayContent"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport NavBar from './views/nav/Navbar';\nimport './App.css';\nimport Dashboard from './views/dashboard/Dashboard';\nimport OrderList from './views/orders/OrdersList';\nimport Search from './views/search/Search';\nimport LoginPage from './views/aa_login/LoginPage';\nimport Invoices from './views/invoices/Invoices';\nimport AdminPanel from './views/admin/AdminPanel';\n\n// For Navigation\nexport const ViewIndex = {\n\tDASHBOARD: 1,\n\tORDERS: 2,\n\tINVOICES: 3,\n\tSEARCH: 4,\n\tHELP: 5,\n\tLOGOUT: 6,\n  TEST: 7\n}\n\n// Will this be controlled by the state?\n// const UserStatus = {\n// \tLOGGED_IN: 1,\n// \tLOGGED_OUT: 2,\n// }\n\n\nfunction App() {\n\n\t/*\n\tfunction App\n\t// get quick stats data\n\t*/\n\n  // get the initial state of the orders \n\n  // const [orders, setOrders] = orderSlice.orders\n\n\tconst [displayContent, setDisplayContent] = useState(ViewIndex.DASHBOARD)\n\t\n  // get status of user\n  /**\n   * USER STATUS??\n   */\n\t//const [userStatus, setUserStatus] = useState(UserStatus.GGC)\n\n  // depending on user status, will depend which class to run (App will be login?)\n\n  //\t{/* if userStatus is ggc show this */}\n\n  // keep viewIndex so NavBar is set with a flag that specifies the specific views allowed to be show\n  return (\n      <div className=\"App\">\n          <header className='App-header'>\n            <NavBar activeButton={displayContent} buttonOnClick={setDisplayContent}/>\n            {displayContent === ViewIndex.DASHBOARD && <Dashboard/>}\n            {displayContent === ViewIndex.ORDERS && <OrderList />}\n            {displayContent === ViewIndex.INVOICES && <Invoices />}\n            {displayContent === ViewIndex.SEARCH && <Search />}\n            {displayContent === ViewIndex.TEST && <AdminPanel />}\n            {displayContent === ViewIndex.HELP && <Dashboard />}\n            {displayContent === ViewIndex.LOGOUT && <LoginPage />}\n          </header>\n        </div>    \n  );\n\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA,OAAO,IAAMC,SAAS,GAAG;EACxBC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC;EACTC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACRC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAG,GAAG;EAEd;AACD;AACA;AACA;EAEE;EAEA;EAAA,gBAE2ChB,QAAQ,CAACQ,SAAS,CAACC,SAAS,CAAC;IAAA;IAAlEQ,cAAc;IAAEC,iBAAiB,kBAEvC;EACA;AACF;AACA;EACC;EAEC;EAEA;EAEA;EACA,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChB;IAAQ,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B,oBAAC,MAAM;IAAC,YAAY,EAAED,cAAe;IAAC,aAAa,EAAEC,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACxED,cAAc,KAAKT,SAAS,CAACC,SAAS,iBAAI,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACtDQ,cAAc,KAAKT,SAAS,CAACE,MAAM,iBAAI,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACpDO,cAAc,KAAKT,SAAS,CAACG,QAAQ,iBAAI,oBAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACrDM,cAAc,KAAKT,SAAS,CAACI,MAAM,iBAAI,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACjDK,cAAc,KAAKT,SAAS,CAACO,IAAI,iBAAI,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACnDE,cAAc,KAAKT,SAAS,CAACK,IAAI,iBAAI,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClDI,cAAc,KAAKT,SAAS,CAACM,MAAM,iBAAI,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC9C,CACL;AAId;AAEA,eAAeE,GAAG"},"metadata":{},"sourceType":"module"}