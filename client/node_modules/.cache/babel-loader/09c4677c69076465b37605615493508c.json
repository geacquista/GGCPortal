{"ast":null,"code":"import _classCallCheck from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _this = this,\n  _jsxFileName = \"/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_CompletedOrders.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createOrder, retrieveOrders } from '../../store/order_slice';\nimport { retrieveCustomers } from '../../store/customer_slice';\nimport { retrieveOrderLines } from '../../store/orderline_slice';\nimport { retrieveInvoices } from '../../store/invoice_slice';\nimport { OrderCard } from \"./active_complete_components/OrderCard\";\n\n// Columns are part of the list\nvar OrderDisplayColumn = function OrderDisplayColumn(_ref) {\n  var title = _ref.title,\n    orders = _ref.orders,\n    customers = _ref.customers,\n    orderCardOnClick = _ref.orderCardOnClick;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"OrderDisplayColumn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: title,\n    style: {\n      position: 'sticky',\n      top: '0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OrderDisplayColumnTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: '0px',\n      margin: '0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 102\n    }\n  }, title))), orders.map(function (order) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(OrderCard, {\n      key: order.orderID,\n      order: order,\n      customer: customers.filter(function (customer) {\n        return customer.customerID === order.customerId;\n      })[0],\n      color: \"#90E0C9\",\n      onClick: orderCardOnClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  }));\n};\n\n// // Active Orders Tab\nvar ActiveOrders = function ActiveOrders(_ref2) {\n  var orders = _ref2.orders,\n    customers = _ref2.customers,\n    orderCardOnClick = _ref2.orderCardOnClick;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderDisplayColumns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(OrderDisplayColumn, {\n    title: \"Placed\",\n    orders: orders.filter(function (order) {\n      return order.orderStatus === \"Placed\";\n    }),\n    customers: customers,\n    orderCardOnClick: orderCardOnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(OrderDisplayColumn, {\n    title: \"Processed\",\n    orders: orders.filter(function (order) {\n      return order.orderStatus === 'Processed';\n    }),\n    customers: customers,\n    orderCardOnClick: orderCardOnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(OrderDisplayColumn, {\n    title: \"Shipped\",\n    orders: orders.filter(function (order) {\n      return order.orderStatus === 'Shipped';\n    }),\n    customers: customers,\n    orderCardOnClick: orderCardOnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }));\n};\n\n// Completed Orders Tab\nvar CompletedOrders = function CompletedOrders(_ref3) {\n  var orders = _ref3.orders,\n    orderCardOnClick = _ref3.orderCardOnClick;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"OrderDisplayColumns\",\n    style: {\n      display: 'flex',\n      displayDirection: 'column'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(OrderDisplayColumn, {\n    title: \"Completed\",\n    orders: orders,\n    orderCardOnClick: orderCardOnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }));\n};\nvar OrderList = /*#__PURE__*/function (_Component) {\n  _inherits(OrderList, _Component);\n  function OrderList(props) {\n    _classCallCheck(this, OrderList);\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderList).call(this, props));\n  }\n\n  // This gets the users when the component loads\n  _createClass(OrderList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.retrieveOrders();\n      this.props.retrieveCustomers();\n      this.props.retrieveInvoices();\n      this.props.retrieveOrderLines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        orders = _this$props.orders,\n        customers = _this$props.customers,\n        orderline = _this$props.orderline,\n        invoices = _this$props.invoices;\n      var data = {\n        orders: orders,\n        customers: customers,\n        orderline: orderline,\n        invoices: invoices\n      };\n      var currentActiveOrders = orders.filter(function (order) {\n        return order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped';\n      });\n      var displayContent = /*#__PURE__*/React.createElement(ActiveOrders, {\n        orders: currentActiveOrders,\n        customers: customers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }\n      });\n\n      // const activeContent = tabs.find(tab => tab.id === activeTabId)\n\n      // switch(activeContent.viewType){\n      // \tcase ViewType.ACTIVE_ORDERS:\n      // \t\tdisplayContent = <ActiveOrders orders={orders.filter(order => (order.status === 'PLACED' || order.status === 'PROCESSED' || order.status === 'SHIPPED'))} orderCardOnClick={addAndOpenOrderView} />\n      // \t\tbreak\n      // \tcase ViewType.COMPLETED_ORDERS:\n      // \t\tdisplayContent = <CompletedOrders orders={orders.filter(order => order.status === 'COMPLETED')} orderCardOnClick={addAndOpenOrderView} />\n      // \t\tbreak\n      // \tcase ViewType.ORDER:\n      // \t\tdisplayContent = <Order order={activeContent.order}/>\n      // \t\tbreak\n      // \tcase ViewType.ADD_ORDER:\n      // \t\tdisplayContent = <OrderAddNew addOrder={createOrder}/>\n      // \t\tbreak\n      // }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 4\n        }\n      }, displayContent);\n    }\n  }]);\n  return OrderList;\n}(Component); // Mapping only the parts of the redux store that we want to work with on this component\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.orders,\n    customers: state.customers,\n    orderline: state.orderline,\n    invoices: state.invoices\n  };\n};\nexport default connect(mapStateToProps, {\n  createOrder: createOrder,\n  retrieveOrders: retrieveOrders,\n  retrieveCustomers: retrieveCustomers,\n  retrieveOrderLines: retrieveOrderLines,\n  retrieveInvoices: retrieveInvoices\n})(OrderList);","map":{"version":3,"names":["React","Component","connect","createOrder","retrieveOrders","retrieveCustomers","retrieveOrderLines","retrieveInvoices","OrderCard","OrderDisplayColumn","title","orders","customers","orderCardOnClick","position","top","padding","margin","map","order","orderID","filter","customer","customerID","customerId","ActiveOrders","orderStatus","CompletedOrders","display","displayDirection","OrderList","props","orderline","invoices","data","currentActiveOrders","displayContent","mapStateToProps","state"],"sources":["/Users/gabrielleacquista/Documents/GitHub/GGCPortal/frontend_goats_portal/src/views/orders/Tab_CompletedOrders.js"],"sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createOrder, retrieveOrders } from '../../store/order_slice'\r\nimport { retrieveCustomers } from '../../store/customer_slice'\r\nimport { retrieveOrderLines } from '../../store/orderline_slice'\r\nimport { retrieveInvoices }\tfrom '../../store/invoice_slice'\r\nimport { OrderCard } from \"./active_complete_components/OrderCard\";\r\n\r\n\r\n// Columns are part of the list\r\nconst OrderDisplayColumn = ({title, orders, customers, orderCardOnClick}) => {\r\n\r\n\r\n\treturn(\r\n\t\t<ul className='OrderDisplayColumn'>\r\n\t\t\t<li key={title} style={{position: 'sticky', top: '0px'}}><div className='OrderDisplayColumnTitle'><h3 style={{padding: '0px', margin: '0px'}}>{title}</h3></div></li>\r\n\r\n\t\t\t{orders.map((order) => (\r\n\t\t\t\t<li><OrderCard key={order.orderID} order={order} customer={customers.filter(customer => customer.customerID === order.customerId)[0]} color='#90E0C9' onClick={orderCardOnClick} /></li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\n// // Active Orders Tab\r\nconst ActiveOrders = ({orders, customers, orderCardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrderDisplayColumns'>\r\n\t\t\t<OrderDisplayColumn title='Placed' orders={orders.filter(order => order.orderStatus === \"Placed\")} customers={customers} orderCardOnClick={orderCardOnClick} />\r\n\t\t\t<OrderDisplayColumn title='Processed' orders={orders.filter(order => order.orderStatus === 'Processed')} customers={customers} orderCardOnClick={orderCardOnClick} />\r\n\t\t\t<OrderDisplayColumn title='Shipped' orders={orders.filter(order => order.orderStatus === 'Shipped')} customers={customers} orderCardOnClick={orderCardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// Completed Orders Tab\r\nconst CompletedOrders = ({orders, orderCardOnClick}) => {\r\n\treturn (\r\n\t\t<div id='OrderDisplayColumns' style={{display: 'flex', displayDirection: 'column'}}>\r\n\t\t\t<OrderDisplayColumn title='Completed' orders={orders} orderCardOnClick={orderCardOnClick} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nclass OrderList extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n      \r\n\t}\r\n  \r\n\t// This gets the users when the component loads\r\n\tcomponentDidMount() {\r\n\t  this.props.retrieveOrders();\r\n\t  this.props.retrieveCustomers();\r\n\t  this.props.retrieveInvoices();\r\n\t  this.props.retrieveOrderLines();\r\n\t}\r\n  \r\n\trender() {\r\n\t\tconst {orders, customers, orderline, invoices} = this.props;\r\n\r\n\t\tconst data = {\r\n\t\t\torders,\r\n\t\t\tcustomers,\r\n\t\t\torderline,\r\n\t\t\tinvoices\r\n\t\t}\r\n\t\t\r\n\t\tconst currentActiveOrders = orders.filter(order => (order.orderStatus === \"Placed\" || order.orderStatus === 'Processed' || order.orderStatus === 'Shipped'));\r\n\t\tlet displayContent = <ActiveOrders orders={currentActiveOrders} customers={customers} />\r\n\r\n\t\t// const activeContent = tabs.find(tab => tab.id === activeTabId)\r\n\r\n\t\t// switch(activeContent.viewType){\r\n\t\t// \tcase ViewType.ACTIVE_ORDERS:\r\n\t\t// \t\tdisplayContent = <ActiveOrders orders={orders.filter(order => (order.status === 'PLACED' || order.status === 'PROCESSED' || order.status === 'SHIPPED'))} orderCardOnClick={addAndOpenOrderView} />\r\n\t\t// \t\tbreak\r\n\t\t// \tcase ViewType.COMPLETED_ORDERS:\r\n\t\t// \t\tdisplayContent = <CompletedOrders orders={orders.filter(order => order.status === 'COMPLETED')} orderCardOnClick={addAndOpenOrderView} />\r\n\t\t// \t\tbreak\r\n\t\t// \tcase ViewType.ORDER:\r\n\t\t// \t\tdisplayContent = <Order order={activeContent.order}/>\r\n\t\t// \t\tbreak\r\n\t\t// \tcase ViewType.ADD_ORDER:\r\n\t\t// \t\tdisplayContent = <OrderAddNew addOrder={createOrder}/>\r\n\t\t// \t\tbreak\r\n\t\t// }\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div>{displayContent}</div>\r\n\t\t);\r\n\r\n\t}\r\n  }\r\n  \r\n\r\n  // Mapping only the parts of the redux store that we want to work with on this component\r\n  const mapStateToProps = (state) => {\r\n\treturn {\r\n\t  orders: state.orders,\r\n\t  customers: state.customers,\r\n\t  orderline: state.orderline,\r\n\t  invoices: state.invoices,\r\n\t};\r\n  };\r\n  \r\nexport default connect(mapStateToProps, { createOrder, retrieveOrders, retrieveCustomers, retrieveOrderLines, retrieveInvoices })(OrderList);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}